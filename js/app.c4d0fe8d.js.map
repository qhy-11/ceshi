{"version":3,"file":"js/app.c4d0fe8d.js","mappings":"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","sources":["webpack://openlayers_vue3/./src/App.vue","webpack://openlayers_vue3/./src/components/HeadeTitle.vue","webpack://openlayers_vue3/./src/components/HeadeTitle.vue?90a9","webpack://openlayers_vue3/./src/components/MapTotal.vue","webpack://openlayers_vue3/./src/components/MapTotal.vue?eb10","webpack://openlayers_vue3/./src/App.vue?7ccd","webpack://openlayers_vue3/./src/views/openlayers2D/OpenlayersView.vue","webpack://openlayers_vue3/./src/views/plugin/openlayersMap.js","webpack://openlayers_vue3/./src/views/openlayers2D/OpenlayersView.vue?8d9e","webpack://openlayers_vue3/./src/views/MapBox/MapBoxView.vue","webpack://openlayers_vue3/./src/views/MapBox/MapBoxView.vue?f555","webpack://openlayers_vue3/./src/views/AMap/GaoDeMap.vue","webpack://openlayers_vue3/./src/views/AMap/LayerMapTree.vue","webpack://openlayers_vue3/./src/views/AMap/LayerMapTree.vue?999a","webpack://openlayers_vue3/./src/views/AMap/LocationBar.vue","webpack://openlayers_vue3/./src/views/AMap/LocationBar.vue?8155","webpack://openlayers_vue3/./src/views/AMap/GaoDeMap.vue?d146","webpack://openlayers_vue3/./src/views/BMap/BaiDuMap.vue","webpack://openlayers_vue3/./src/views/BMap/LocationBar.vue","webpack://openlayers_vue3/./src/views/BMap/LocationBar.vue?1de0","webpack://openlayers_vue3/./src/views/BMap/BaiDuMap.vue?ab4f","webpack://openlayers_vue3/./src/router/index.js","webpack://openlayers_vue3/./src/store/index.js","webpack://openlayers_vue3/./src/main.js","webpack://openlayers_vue3/webpack/bootstrap","webpack://openlayers_vue3/webpack/runtime/chunk loaded","webpack://openlayers_vue3/webpack/runtime/define property getters","webpack://openlayers_vue3/webpack/runtime/ensure chunk","webpack://openlayers_vue3/webpack/runtime/get javascript chunk filename","webpack://openlayers_vue3/webpack/runtime/get mini-css chunk filename","webpack://openlayers_vue3/webpack/runtime/global","webpack://openlayers_vue3/webpack/runtime/hasOwnProperty shorthand","webpack://openlayers_vue3/webpack/runtime/load script","webpack://openlayers_vue3/webpack/runtime/make namespace object","webpack://openlayers_vue3/webpack/runtime/publicPath","webpack://openlayers_vue3/webpack/runtime/css loading","webpack://openlayers_vue3/webpack/runtime/jsonp chunk loading","webpack://openlayers_vue3/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <HeadeTitle/>\n    <MapTotal/>\n  </div>\n</template>\n<script>\nimport HeadeTitle from \"/src/components/HeadeTitle\"\nimport MapTotal from \"/src/components/MapTotal\"\nexport default {\n  components:{\n    HeadeTitle,\n    MapTotal\n  }\n}\n</script>\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n.dashboard {\n  width: 100%;\n  height: 100vh;\n  min-width: 1366px;\n  /* background: #001029; */\n  overflow: hidden;\n}\n\n</style>\n","<template>\r\n  <div class=\"contentStyle\">\r\n    <span class=\"title\">WebGis-QHY</span>\r\n    <div class=\"nav\" >\r\n      <div class=\"nav_item\" @click=\"toIndexPage(item.nameId)\" v-for=\"(item) in pageList\"  :key=\"item\">\r\n        {{ item.name }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'HeadeTitle',\r\n  data () {\r\n    return {\r\n      //导航数组\r\n      pageList: [\r\n       {\r\n        nameId: '1',\r\n        path: '/',\r\n        name:'Openlayers'\r\n       },\r\n       {\r\n        nameId: '2',\r\n        path: '/cesium',\r\n        name: 'Cesium'\r\n       },\r\n       {\r\n        nameId: '3',\r\n        path: '/mapbox',\r\n        name: 'Mapbox'\r\n       },\r\n       {\r\n        nameId: '4',\r\n        path: '/GaoDeMap',\r\n        name: 'Amap'\r\n       },\r\n       {\r\n        nameId: '5',\r\n        path: '/BaiDuMap',\r\n        name: 'Bmap'\r\n       },\r\n      ],\r\n      fullscreen: false,\r\n      date: ''\r\n    }\r\n  },\r\n  mounted () {\r\n\r\n  },\r\n  methods: {\r\n    // 全屏显示\r\n    openScreen () {\r\n      const ele = document.documentElement\r\n      if (this.fullscreen) {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen()\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen()\r\n        } else if (document.webkitExitFullscreen) {\r\n          document.webkitExitFullscreen()\r\n        }\r\n        this.fullscreen = false\r\n      } else {\r\n        ele.requestFullscreen()\r\n        this.fullscreen = true\r\n      }\r\n    },\r\n    //路由跳转\r\n    toIndexPage(val) {\r\n      \r\n      const path = this.pageList[val-1].path\r\n      this.$router.push({ path: path })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.contentStyle {\r\n  width: 100%;\r\n  height: 80px;\r\n  background: url('../assets/image/head.png') no-repeat;\r\n  background-size: 100% 100%;\r\n  line-height: 80px;\r\n  font-weight: 500;\r\n  text-align: center; \r\n  // position: fixed;\r\n  background-color: #2c3e50;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n\r\n  .title {\r\n    font-size: 32px;\r\n    letter-spacing: 1px;\r\n    font-weight: 600;\r\n    color: #FFFFFF;\r\n    line-height: 45px;\r\n    margin-top: -5px;\r\n    background: linear-gradient(to bottom, #fff, #f8fdff, #acf5ff,#67eeff, #24d8ff);\r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n  }\r\n\r\n  .nav {\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 5px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 750px;\r\n    transform: none;\r\n    // transform: translateY(-30%);\r\n    // color: #ffffff;\r\n    // background: linear-gradient(to bottom, #fff, #f8fdff, #acf5ff,#67eeff, #24d8ff);\r\n    // color: transparent;\r\n    // background-color: #2c3e50;\r\n  }\r\n.nav_item {\r\n  font-weight: bold;\r\n  background: linear-gradient(to bottom, #fff, #f8fdff, #acf5ff,#67eeff, #24d8ff);\r\n  -webkit-background-clip: text;\r\n  color: transparent;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  width: 120px;  \r\n}\r\n.nav_item:active {\r\n    color: #42b983;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./HeadeTitle.vue?vue&type=template&id=faf5a8ae&scoped=true\"\nimport script from \"./HeadeTitle.vue?vue&type=script&lang=js\"\nexport * from \"./HeadeTitle.vue?vue&type=script&lang=js\"\n\nimport \"./HeadeTitle.vue?vue&type=style&index=0&id=faf5a8ae&lang=scss&scoped=true\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-faf5a8ae\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"map\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'mapView'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>","import { render } from \"./MapTotal.vue?vue&type=template&id=4d5e0212&scoped=true\"\nimport script from \"./MapTotal.vue?vue&type=script&lang=js\"\nexport * from \"./MapTotal.vue?vue&type=script&lang=js\"\n\nimport \"./MapTotal.vue?vue&type=style&index=0&id=4d5e0212&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4d5e0212\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=388f958e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=388f958e&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"openlayersContainer\">\n    <el-menu\n        class=\"el-menu-1\"\n        mode=\"horizontal\"\n        :ellipsis=\"false\"\n        @select=\"handleSelect\">\n           <el-menu-item index=\"0\" @click=\"text()\">功能测试</el-menu-item>\n           <el-menu-item index=\"4\" @click=\"text()\">变速</el-menu-item>\n           <el-menu-item index=\"5\" @click=\"text()\">暂停</el-menu-item>\n           <el-sub-menu index=\"1\">\n              <template #title>图层功能</template>\n              <el-menu-item index=\"1-1\" @click=\"setLayerVisble(true)\">添加点图层</el-menu-item>\n              <el-menu-item index=\"1-2\" @click=\"setLayerVisble(false)\">隐藏点图层</el-menu-item>\n           </el-sub-menu>\n           <el-sub-menu index=\"2\">\n              <template #title>绘制工具</template>\n              <el-menu-item index=\"2-1\" @click=\"seletDraw('Point')\">绘制点</el-menu-item>\n              <el-menu-item index=\"2-2\" @click=\"seletDraw('LineString')\">绘制线</el-menu-item>\n              <el-menu-item index=\"2-3\" @click=\"seletDraw('Polygon')\">绘制面</el-menu-item>\n              <el-menu-item index=\"2-4\" @click=\"seletDraw('Area')\">绘制矩形</el-menu-item>\n              <el-menu-item index=\"2-5\" @click=\"drawCircle()\">绘制圆</el-menu-item>\n              <el-menu-item index=\"2-6\" @click=\"seletDraw('None')\">清除绘制</el-menu-item>\n            </el-sub-menu>\n           <el-sub-menu index=\"3\">\n              <template #title>测量工具</template>\n              <el-menu-item index=\"3-1\" @click=\"initMeasure('LineString')\">测量线段</el-menu-item>\n              <el-menu-item index=\"3-2\" @click=\"initMeasure('Polygon')\">测量面积</el-menu-item>\n              <el-menu-item index=\"3-3\" @click=\"initMeasure('None')\">清除测量</el-menu-item>\n           </el-sub-menu>\n      </el-menu>\n      <!-- <button @click=\"closeClick()\">关闭鼠标移动</button> -->\n      <!-- <button @click=\"zoomRec()\">打印矩形</button> -->\n      <!-- <el-button @click=\"initdraw()\">画笔工具</el-button> -->\n  </div>\n     \n</template>\n\n<script>\nlet iconMap;\n\nlet drawLayer; //绘制图层\nlet measureLayer; //测量图层\n\nlet pointermoveClick;\n\nlet tdtToken = 'a8247364a0332bbd60a021b35a77274c' //天地图在线token\nlet number = Math.ceil(Math.random()*7) //取一个随机整数，调用天地图api\n\n\nlet measureHandle = {};\n\nimport { trackPlayBack } from \"../plugin/openlayersMap\"\nexport default {\n  name: \"OpenlayersView\",\n  data() {\n    return {\n      map: null,\n      draw: null,\n      measure: null,\n      movefeature: true,\n      animation: undefined,\n      // DoubleClickZoom: undefined,\n    };\n  },\n  mounted() {\n    this.initMap();\n    // this.initMeasure();\n\n    this.initMeasureHandle();\n    this.initMove(); //初始化鼠标移动事件\n    // this.inittext();\n  },\n  methods: {\n    handleSelect(key, keyPath) {\n      // console.log(key, keyPath);\n    },\n    //功能测试按钮\n    text() {\n      // const layers = this.map.getLayers()\n      // // console.log(layers.array_.length);\n      // const blueMap = function(imageTile, src) {\n      //           let img = new Image();\n      //           img.crossOrigin = '';\n      //           img.onload = function () {\n      //               let canvas = document.createElement('canvas');\n      //               let w = img.width;\n      //               let h = img.height;\n      //               canvas.width = w;\n      //               canvas.height = h;\n      //               let context = canvas.getContext('2d');\n                    \n      //               context.drawImage(img, 0, 0, w, h, 0, 0, w, h);\n      //               let imageData = context.getImageData(0, 0, w, h);\n      //               for(let i = 0; i<imageData.height; i++){\n      //                   for(let j = 0; j<imageData.width; j++){\n      //                       var x = (i*4) * imageData.width + (j*4);\n      //                       // var r = imageData.data[x];\n      //                       // var g = imageData.data[x+1];\n      //                       // var b = imageData.data[x+2];\n\n      //                       imageData.data[x] = imageData.data[x + 1] = imageData.data[x + 2] = imageData.data[x] * 0.3 + imageData.data[x + 1] * 0.59 + imageData.data[x + 2] * 0.11\n      //                       imageData.data[x] = 55 - imageData.data[x]\n      //                       imageData.data[x + 1] = 255 - imageData.data[x + 1]\n      //                       imageData.data[x + 2] = 305 - imageData.data[x + 2]\n      //                       // imageData.data[x] = imageData.data[x+1] = imageData.data[x+2] = (r+g+b) / 3;\n      //                   }\n      //               }\n      //               context.putImageData(imageData, 0, 0);\n      //               // console.log(imageData);\n      //               imageTile.getImage().src = canvas.toDataURL('image/png');\n      //           }\n      //           img.src = src;\n      // }\n      // layers.array_.forEach(element=>{\n      //   if (element.values_.id === 'TDT') {\n      //     const source = element.values_.source\n         \n      //     source.setTileLoadFunction(blueMap)\n      //     // this.map.checkResize()\n      //     // source.changed()\n      //     // source.clear()\n      //     // map.updateSize();\n      //     // source.refresh()\n      //     // source.on('propertychange',source.refresh()) \n      //     //  console.log(source);\n      //   }\n      // })    \n      this.animation = new trackPlayBack(this.map,{\n        coordinates:[\n          [103.71909135974121, 29.566333383636476], \n          [103.71808284915161, 29.56375846298218],\n          [103.72346872485352, 29.565904230194093],\n          [103.7206385350297, 29.5593516489587],\n          [103.72572400332194, 29.561003889711873],\n          [103.72404799108507, 29.558445799106526],\n          [103.72866139059069, 29.56084905838387]\n        ],\n        // speed: 100\n      })\n      this.animation.startAnimation()\n      // animation.coordinates =  [\n      //     [103.71909135974121, 29.566333383636476], \n      //     [103.71808284915161, 29.56375846298218],\n      //     [103.72346872485352, 29.565904230194093],\n      //     [103.7206385350297, 29.5593516489587],\n      //     [103.72572400332194, 29.561003889711873],\n      //     [103.72404799108507, 29.558445799106526],\n      //     [103.72866139059069, 29.56084905838387]\n      //   ]\n      // console.log(typeof(animation._speed));\n    },\n    stop() {\n      this.animation.endAnimation()\n    },\n    initMap() {\n      const tdtMap = new ol.layer.Tile({\n        source: new ol.source.XYZ({\n          url: `http://t${number}.tianditu.com/DataServer?T=vec_w&tk=${tdtToken}&x={x}&y={y}&l={z}`,\n          params: \"天地图矢量\",\n          zIndex: 0,\n          // tileLoadFunction: function(imageTile, src) {\n          //       let img = new Image();\n          //       img.crossOrigin = '';\n          //       img.onload = function () {\n          //           let canvas = document.createElement('canvas');\n          //           let w = img.width;\n          //           let h = img.height;\n          //           canvas.width = w;\n          //           canvas.height = h;\n          //           let context = canvas.getContext('2d');\n                    \n          //           context.drawImage(img, 0, 0, w, h, 0, 0, w, h);\n          //           let imageData = context.getImageData(0, 0, w, h);\n          //           for(let i = 0; i<imageData.height; i++){\n          //               for(let j = 0; j<imageData.width; j++){\n          //                   var x = (i*4) * imageData.width + (j*4);\n          //                   // var r = imageData.data[x];\n          //                   // var g = imageData.data[x+1];\n          //                   // var b = imageData.data[x+2];\n\n          //                   imageData.data[x] = imageData.data[x + 1] = imageData.data[x + 2] = imageData.data[x] * 0.3 + imageData.data[x + 1] * 0.59 + imageData.data[x + 2] * 0.11\n          //                   imageData.data[x] = 55 - imageData.data[x]\n          //                   imageData.data[x + 1] = 255 - imageData.data[x + 1]\n          //                   imageData.data[x + 2] = 305 - imageData.data[x + 2]\n          //                   // imageData.data[x] = imageData.data[x+1] = imageData.data[x+2] = (r+g+b) / 3;\n          //               }\n          //           }\n          //           context.putImageData(imageData, 0, 0);\n          //           // console.log(imageData);\n          //           imageTile.getImage().src = canvas.toDataURL('image/png');\n          //       }\n          //       img.src = src;\n          //   }\n        }),\n        id: 'TDT'\n      });\n      const tdtMap2 = new ol.layer.Tile({\n        source: new ol.source.XYZ({\n          url: `http://t${number}.tianditu.com/DataServer?T=cva_w&tk=${tdtToken}&x={x}&y={y}&l={z}`,\n          params: \"天地图矢量标注\",\n          zIndex: 1,\n          // tileLoadFunction:function(imageTile, src) {\n          //     let img = new Image();\n          //     img.crossOrigin = '';\n          //     img.onload = function () {\n          //         let canvas = document.createElement('canvas');\n          //         let w = img.width;\n          //         let h = img.height;\n          //         canvas.width = w;\n          //         canvas.height = h;\n          //         let context = canvas.getContext('2d');\n                  \n          //         context.drawImage(img, 0, 0, w, h, 0, 0, w, h);\n          //         let imageData = context.getImageData(0, 0, w, h);\n          //         for(let i = 0; i<imageData.height; i++){\n          //             for(let j = 0; j<imageData.width; j++){\n          //                 var x = (i*4) * imageData.width + (j*4);\n          //                 // var r = imageData.data[x];\n          //                 // var g = imageData.data[x+1];\n          //                 // var b = imageData.data[x+2];\n\n          //                 imageData.data[x] = imageData.data[x + 1] = imageData.data[x + 2] = imageData.data[x] * 0.3 + imageData.data[x + 1] * 0.59 + imageData.data[x + 2] * 0.11\n          //                 imageData.data[x] = 55 - imageData.data[x]\n          //                 imageData.data[x + 1] = 255 - imageData.data[x + 1]\n          //                 imageData.data[x + 2] = 305 - imageData.data[x + 2]\n\n          //                 // imageData.data[x] = imageData.data[x+1] = imageData.data[x+2] = (r+g+b) / 3;\n          //             }\n          //         }\n          //         context.putImageData(imageData, 0, 0);\n          //         // console.log(imageData);\n          //         imageTile.getImage().src = canvas.toDataURL('image/png');\n          //     }\n          //     img.src = src;\n          // }\n        }),\n        id: 'TDT'\n      });\n      const tdtMap3 = new ol.layer.Tile({\n        source: new ol.source.XYZ({\n          url: \"http://t4.tianditu.com/DataServer?T=img_w&tk=a8247364a0332bbd60a021b35a77274c&x={x}&y={y}&l={z}\",\n          params: \"天地图影像\",\n          zIndex: 0,\n        }),\n      });\n      iconMap = new ol.layer.Vector({\n        source: new ol.source.Vector(),\n        zIndex: 5,\n        visible: true,\n      });\n\n      return new Promise(() => {\n        this.map = new ol.Map({\n          // layers: [tdtMap, tdtMap2, iconMap, tdtMap3],\n          layers: [tdtMap, tdtMap2, iconMap],\n          // layers: [tdtMap,  iconMap],\n          target: \"openlayersContainer\",\n          view: new ol.View({\n            // center: [104.070929, 30.666901],\n            center: [103.71909135974121, 29.566333383636476],\n            zoom: 15,\n            projection: \"EPSG:4326\",\n          }),\n        });\n      });\n    },\n    //改变底图样式\n    changeMap() {\n      \n    },\n    //添加图标点\n    addIcon(options) {\n      const iconStyle = new ol.style.Style({\n        image: new ol.style.Icon({\n          src: require(\"../openlayers2D/images/定位.png\"),\n          id: options.id,\n        }),\n      });\n      const feature = new ol.Feature({\n        geometry: new ol.geom.Point(options.pos),\n        id: options.id,\n      });\n      // //注册移入对象事件\n      // feature.on(\"mousein\", (event) => {\n      //   console.log(\"移入对象\");\n      // });\n      feature.setStyle(iconStyle);\n      const soure = iconMap.getSource();\n      soure.addFeature(feature);\n    },\n    //添加多个图标点\n    addIcons() {\n      const options = [\n        {\n          pos: [104.070929, 30.666901],\n          id: 1,\n        },\n        {\n          pos: [104.080929, 30.666901],\n          id: 2,\n        },\n        {\n          pos: [104.090929, 30.666901],\n          id: 3,\n        },\n      ];\n      options.forEach((element) => {\n        this.addIcon(element);\n      });\n    },\n    //控制图层显隐\n    setLayerVisble(bool) {\n      const soure = iconMap.getSource();\n      const features = soure.getFeatures()\n      if (features.length === 0) {\n          this.addIcons()\n      }\n      // console.log(features);\n      iconMap.setVisible(bool);\n    },\n    darwPoint() {\n      // console.log(this.map.addInteraction(), 11);\n      if (this.draw != undefined && this.draw != null) {\n        this.map.removeInteraction(this.draw);\n      }\n      this.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        type: \"Point\",\n      });\n      this.map.addInteraction(this.draw);\n      this.draw.on(\"drawend\", () => {\n        this.draw.setActive();\n      });\n    },\n    darwLine() {\n      if (this.draw != undefined && this.draw != null) {\n        this.map.removeInteraction(this.draw);\n      }\n      this.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        type: \"LineString\",\n      });\n      this.map.addInteraction(this.draw);\n      this.draw.on(\"drawend\", () => {\n        this.draw.setActive();\n      });\n    },\n    darwPolygon() {\n      if (this.draw != undefined && this.draw != null) {\n        this.map.removeInteraction(this.draw);\n      }\n      // console.log(this.draw, 22);\n      this.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        type: \"Polygon\",\n      });\n      this.map.addInteraction(this.draw);\n      this.draw.on(\"drawend\", () => {\n        this.draw.setActive();\n      });\n    },\n    drawBox() {\n      if (this.draw != undefined && this.draw != null) {\n        this.map.removeInteraction(this.draw);\n      }\n      // console.log(this.draw, 11);\n      this.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        geometryFunction: new ol.interaction.Draw.createBox(),\n        type: \"LineString\",\n      });\n      this.map.addInteraction(this.draw);\n      //清除双击缩放地图事件，结束绘制操作\n      this.draw.on(\"drawstart\", () => {\n        const dblClick = this.map\n          .getInteractions()\n          .getArray()\n          .find((interaction) => {\n            return interaction instanceof ol.interaction.DoubleClickZoom;\n          });\n        this.map.removeInteraction(dblClick);\n      });\n      this.draw.on(\"drawend\", () => {\n        this.draw.setActive();\n      });\n    },\n    clearAll() {\n      const source = drawLayer.getSource();\n      source.clear();\n    },\n    //绘制功能\n    seletDraw(value) {\n      // const styleFunction = function (feature) {\n      // const geometry = feature.getGeometry();\n      // const styles = [\n      //   // linestring\n      //   new ol.style.Style({\n      //     stroke: new ol.style.Stroke({\n      //       color: '#ffcc33',\n      //       width: 10,\n      //     }),\n      //   }),\n      // ];\n\n      //   geometry.forEachSegment(function (start, end) {\n      //     const dx = end[0] - start[0];\n      //     const dy = end[1] - start[1];\n      //     const rotation = Math.atan2(dy, dx);\n      //     // arrows\n      //     styles.push(\n      //       new ol.style.Style({\n      //         geometry: new ol.geom.Point(end),\n      //         image: new ol.style.Icon({\n      //           src: require(\"../assets/arrow.png\"),\n      //           anchor: [0.75, 0.5],\n      //           rotateWithView: true,\n      //           rotation: -rotation,\n      //         }),\n      //       })\n      //     );\n      //   });\n\n      //   return styles;\n      // };\n      \n      if (!drawLayer) {\n        const source = new ol.source.Vector({ wrapX: false });\n        drawLayer = new ol.layer.Vector({\n          source: source,\n        });\n      }\n      this.map.addLayer(drawLayer);\n      drawLayer.setStyle(styleFunction)\n      const map = this.map;\n      if (this.draw !== \"undefined\" && this.draw !== null) {\n        map.removeInteraction(this.draw);\n      }\n      if (value === \"None\") {\n        this.clearAll();\n      } else {\n        if (value !== \"Area\") {\n          this.draw = new ol.interaction.Draw({\n            source: drawLayer.getSource(),\n            type: value,\n          });\n        } else if (value === \"Area\") {\n          this.draw = new ol.interaction.Draw({\n            source: drawLayer.getSource(),\n            geometryFunction: new ol.interaction.Draw.createBox(),\n            type: \"LineString\",\n          });\n        }\n        map.addInteraction(this.draw);\n        //清除双击缩放地图事件，结束绘制操作\n        this.draw.on(\"drawstart\", () => {\n          const dblClick = map\n            .getInteractions()\n            .getArray()\n            .find((interaction) => {\n              return interaction instanceof ol.interaction.DoubleClickZoom;\n            });\n          map.removeInteraction(dblClick);\n        });\n        this.draw.on(\"drawend\", () => {\n          this.draw.setActive();\n        });\n      }\n    },\n    //测量功能\n    initMeasure(value) {\n      if (!measureLayer) {\n        const source = new ol.source.Vector({ wrapX: false });\n        measureLayer = new ol.layer.Vector({\n          source: source,\n        });\n      }\n      this.map.addLayer(measureLayer);\n      const style = new ol.style.Style({\n        fill: new ol.style.Fill({\n          color: \"rgba(255, 255, 255, 0.2)\",\n        }),\n        stroke: new ol.style.Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          lineDash: [10, 10],\n          width: 2,\n        }),\n        image: new ol.style.Circle({\n          radius: 5,\n          stroke: new ol.style.Stroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new ol.style.Fill({\n            color: \"rgba(255, 255, 255, 0.2)\",\n          }),\n        }),\n      });\n\n      // const labelStyle = new ol.style.Style({\n      //   text: new ol.style.Text({\n      //     font: \"14px Calibri,sans-serif\",\n      //     fill: new ol.style.Fill({\n      //       color: \"rgba(255, 255, 255, 1)\",\n      //     }),\n      //     backgroundFill: new ol.style.Fill({\n      //       color: \"rgba(0, 0, 0, 0.7)\",\n      //     }),\n      //     padding: [3, 3, 3, 3],\n      //     textBaseline: \"bottom\",\n      //     offsetY: -15,\n      //   }),\n      //   image: new ol.style.RegularShape({\n      //     radius: 8,\n      //     points: 3,\n      //     angle: Math.PI,\n      //     displacement: [0, 10],\n      //     fill: new ol.style.Fill({\n      //       color: \"rgba(0, 0, 0, 0.7)\",\n      //     }),\n      //   }),\n      // });\n      \n      const thatMap = this.map;\n      let thatlistener;\n      let sketch;\n      let measure = this.measure;\n      let measureTooltipElement;\n      let measureTooltip;\n        createMeasureTooltip();\n        if (measure !== \"undefined\" && measure !== null) {\n          // console.log(measure);\n          measure = null;\n          thatMap.removeInteraction(measure);\n        }\n        measure = new ol.interaction.Draw({\n          source: measureLayer.getSource(),\n          type: value,\n          style: style,\n        });\n        // console.log(measure, 111);\n        thatMap.addInteraction(measure);\n\n        if (value === \"None\") {\n          const source = measureLayer.getSource();\n          source.clear();\n          measure.setActive();\n          // thatMap.removeOverlay(measureTooltip);\n        }\n\n        //绘制开始事件\n        measure.on(\"drawstart\", (evt) => {\n          const dblClick = thatMap\n            .getInteractions()\n            .getArray()\n            .find((interaction) => {\n              return interaction instanceof ol.interaction.DoubleClickZoom;\n            });\n          thatMap.removeInteraction(dblClick);\n          sketch = evt.feature;\n          let tooltipCoord = evt.coordinate;\n          thatlistener = sketch.getGeometry().on(\"change\", (evt) => {\n            const geom = evt.target;\n            let output;\n\n            if (geom instanceof ol.geom.Polygon) {\n              let p = geom.clone();\n              let circleIn4326 = p.transform(\n                thatMap.getView().getProjection(),\n                \"EPSG:3857\"\n              );\n              output = formatArea(circleIn4326);\n              tooltipCoord = geom.getInteriorPoint().getCoordinates();\n            } else if (geom instanceof ol.geom.LineString) {\n              let p = geom.clone();\n              let circleIn4326 = p.transform(\n                thatMap.getView().getProjection(),\n                \"EPSG:3857\"\n              );\n              output = formatLength(circleIn4326);\n              tooltipCoord = geom.getLastCoordinate();\n            }\n            measureTooltipElement.innerHTML = output;\n            measureTooltip.setPosition(tooltipCoord);\n          });\n        });\n        //绘制结束事件\n\n        measure.on(\"drawend\", () => {\n          sketch = null;\n          ol.Observable.unByKey(thatlistener);\n          measure.setActive();\n        });\n      \n      //计算长度的方法\n      const formatLength = function (line) {\n        const length = ol.sphere.getLength(line);\n        let output;\n        if (length > 100) {\n          output = Math.round((length / 1000) * 100) / 100 + \" km\";\n        } else {\n          output = Math.round(length * 100) / 100 + \" m\";\n        }\n        return output;\n      };\n      //计算面积的方法\n      const formatArea = function (polygon) {\n        const area = ol.sphere.getArea(polygon);\n        let output;\n        if (area > 10000) {\n          output = Math.round((area / 1000000) * 100) / 100 + \" km\\xB2\";\n        } else {\n          output = Math.round(area * 100) / 100 + \" m\\xB2\";\n        }\n        return output;\n      };\n      function createMeasureTooltip() {\n        // console.log(measureTooltipElement, 22);\n        if (measureTooltipElement) {\n          measureTooltipElement.parentNode.removeChild(measureTooltipElement);\n        }\n        measureTooltipElement = document.createElement(\"div\");\n        measureTooltipElement.className = \"ol-tooltip ol-tooltip-measure\";\n        measureTooltip = new ol.Overlay({\n          element: measureTooltipElement,\n          offset: [0, -15],\n          positioning: \"bottom-center\",\n          stopEvent: false,\n          insertFirst: false,\n        });\n        thatMap.addOverlay(measureTooltip);\n      }\n    },\n    //测量工具\n    initMeasureHandle() {\n      if (!measureLayer) {\n        const source = new ol.source.Vector({ wrapX: false });\n        measureLayer = new ol.layer.Vector({\n          source: source,\n        });\n      }\n      this.map.addLayer(measureLayer);\n      const style = new ol.style.Style({\n        fill: new ol.style.Fill({\n          color: \"rgba(255, 255, 255, 0.2)\",\n        }),\n        stroke: new ol.style.Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          lineDash: [10, 10],\n          width: 2,\n        }),\n        image: new ol.style.Circle({\n          radius: 5,\n          stroke: new ol.style.Stroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new ol.style.Fill({\n            color: \"rgba(255, 255, 255, 0.2)\",\n          }),\n        }),\n      });\n      const handlerDis = new ol.interaction.Draw({\n        source: measureLayer.getSource(),\n        style: style,\n        type: \"LineString\",\n      });\n      const handlerArea = new ol.interaction.Draw({\n        source: measureLayer.getSource(),\n        style: style,\n        type: \"Polygon\",\n      });\n      this.map.addInteraction(handlerDis);\n      // this.map.addInteraction(handlerArea);\n      const that = this;\n      handlerDis.setActive(false);\n      // handlerArea.setActive(false);\n      handlerDis.on(\"drawend\", (evt) => {\n        that.closeDoubleClickZoom();\n        handlerDis.setActive(false);\n      });\n      handlerArea.on(\"drawend\", (evt) => {\n        that.closeDoubleClickZoom();\n        handlerArea.setActive(false);\n      });\n      measureHandle.handlerDis = handlerDis;\n      measureHandle.handlerArea = handlerArea;\n    },\n    handleMeasureDis() {\n      // measureHandle.handlerDis&&\n      measureHandle.handlerDis.setActive(true);\n    },\n    //打印矩形区域\n    zoomRec() {\n      const view = this.map.getView();\n      console.log(view.getResolutionForExtent());\n    },\n    //节流函数\n    throttle(func, delay) {\n      let timer;\n      return function () {\n        if (timer) {\n          return;\n        }\n        timer = setTimeout(() => {\n          func(e);\n          timer = null;\n        }, delay);\n      };\n    },\n    //鼠标移动事件\n    initMove() {},\n    closeClick() {\n      ol.Observable.unByKey(pointermoveClick);\n    },\n    //移入移出回调\n    // mousein() {},\n    initcloseMap(callbcack) {\n      this.DoubleClickZoom = callbcack;\n    },\n    closeDoubleClickZoom() {\n      const dblClick = this.map\n        .getInteractions()\n        .getArray()\n        .find((interaction) => {\n          return interaction instanceof ol.interaction.DoubleClickZoom;\n        });\n      this.map.removeInteraction(dblClick);\n    },\n    //绘制圆形\n    drawCircle() {\n      const that = this;\n      const source = new ol.source.Vector({ wrapX: false });\n      drawLayer = new ol.layer.Vector({\n        source: source,\n      });\n      that.map.addLayer(drawLayer);\n      that.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        type: \"Circle\",\n      });\n\n      that.map.addInteraction(that.draw);\n      that.draw.on(\"drawend\", (evt) => {\n        // console.log(evt.feature.getGeometry(), 11);\n        const center = evt.feature.getGeometry().getCenter();\n        const radius = evt.feature.getGeometry().getRadius();\n        const aa = that.map.getView().getProjection().getMetersPerUnit();\n        that.draw.setActive(false);\n      });\n    },\n    //画笔工具\n    initdraw() {\n      const that = this;\n      const newstyle = new ol.style.Style({\n        fill: new ol.style.Fill({\n          color: \"red\",\n        }),\n        stroke: new ol.style.Stroke({\n          color: \"red\",\n          width: 4,\n        }),\n      });\n\n      that.draw = new ol.interaction.Draw({\n        source: drawLayer.getSource(),\n        type: \"LineString\",\n        freehand: true,\n      });\n      this.drawLayer.setStyle(newstyle)\n      that.map.addInteraction(that.draw);\n    },\n   \n  },\n};\n</script>\n<style scoped>\n#openlayersContainer {\n  /* position: absolute; */\n  height: 100%;\n  width: 100%;\n}\n.ol-tooltip {\n  position: relative;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  color: white;\n  padding: 4px 8px;\n  opacity: 0.7;\n  white-space: nowrap;\n  font-size: 12px;\n  cursor: default;\n  user-select: none;\n}\n.ol-tooltip-measure {\n  opacity: 1;\n  font-weight: bold;\n}\n.ol-tooltip-static {\n  background-color: #ffcc33;\n  color: black;\n  border: 1px solid white;\n}\n.ol-tooltip-measure:before,\n.ol-tooltip-static:before {\n  border-top: 6px solid rgba(0, 0, 0, 0.5);\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  content: \"\";\n  position: absolute;\n  bottom: -6px;\n  margin-left: -7px;\n  left: 50%;\n}\n.ol-tooltip-static:before {\n  border-top-color: #ffcc33;\n}\n</style>\n","/*\r\n//   在线底图参数配置\r\n*/\r\n\r\nlet tdtToken = 'e3c89feaecd660ec11cc5794ecec2cbd' //天地图在线token\r\nlet number = Math.ceil(Math.random() * 7) //取一个随机整数，调用天地图api\r\n\r\n\r\n/* // 全局变量配置\r\n */\r\nlet map = null // 地图 promise 全局变量\r\nlet markerLayer = new ol.layer.Vector({ //marker 矢量图层\r\n    source: new ol.source.Vector(),\r\n    name: 'marker'\r\n})\r\nlet drawLayer = new ol.layer.Vector({ //draw 标绘工具矢量图层\r\n    source: new ol.source.Vector(),\r\n    name: 'draw'\r\n})\r\n\r\n\r\nlet wmsURL = `http://223.85.196.232:8080/geoserver/wms`\r\nconst PSLLayer = new ol.layer.Tile({\r\n    extent: [106.16885749, 30.73506675, 106.68535793, 31.27832114],\r\n    source: new ol.source.TileWMS({\r\n        url: wmsURL,\r\n        params: {\r\n            FORMAT: 'image/png',\r\n            VERSION: '1.1.1',\r\n            tiled: true,\r\n            STYLES: '',\r\n            LAYERS: 'cite:PengAn_PSL'\r\n        },\r\n        crossOrigin: 'anonymous',\r\n        serverType: 'geoserver',\r\n        projection: 'EPSG:4326'\r\n    }),\r\n    visible: true,\r\n    zIndex: -2,\r\n    id: 'PSLLayer'\r\n})\r\n\r\nconst PSPLayer = new ol.layer.Tile({\r\n    extent: [106.16885749, 30.73506675, 106.68535793, 31.27832114],\r\n    source: new ol.source.TileWMS({\r\n        url: wmsURL,\r\n        params: {\r\n            FORMAT: 'image/png',\r\n            VERSION: '1.1.1',\r\n            tiled: true,\r\n            STYLES: '',\r\n            LAYERS: 'cite:PengAn_PSP'\r\n        },\r\n        crossOrigin: 'anonymous',\r\n        serverType: 'geoserver'\r\n    }),\r\n    visible: true,\r\n    zIndex: -2,\r\n    id: 'PSPLayer'\r\n})\r\n\r\n/**\r\n * 初始化地图\r\n * @param {string} id  // 挂载地图 DOM 的 id\r\n */\r\n\r\nexport function initMap(id) {\r\n    return new Promise(resolve => {\r\n\r\n        //在线底图接口\r\n        const tdtVecmap = new ol.layer.Tile({\r\n            source: new ol.source.XYZ({\r\n                url: `http://t${number}.tianditu.com/DataServer?T=vec_w&tk=${tdtToken}&x={x}&y={y}&l={z}`\r\n            }),\r\n            name: '天地图在线矢量图层',\r\n            id: 'vec',\r\n            zIndex: -9\r\n        })\r\n        const tdtVecZjmap = new ol.layer.Tile({\r\n            source: new ol.source.XYZ({\r\n                url: `http://t${number}.tianditu.com/DataServer?T=cva_w&tk=${tdtToken}&X={x}&Y={y}&L={z}`\r\n            }),\r\n            name: '天地图在线矢量注记图层',\r\n            id: 'vec',\r\n            zIndex: -8\r\n        })\r\n        const tdtImgmap = new ol.layer.Tile({\r\n            source: new ol.source.XYZ({\r\n                url: `http://t${number}.tianditu.com/DataServer?T=img_w&tk=${tdtToken}&X={x}&Y={y}&L={z}`\r\n            }),\r\n            name: '天地图在线影像图层',\r\n            id: 'img',\r\n            zIndex: -9,\r\n            visible: false\r\n        })\r\n        const tdtImgZjmap = new ol.layer.Tile({\r\n                source: new ol.source.XYZ({\r\n                    url: `http://t${number}.tianditu.com/DataServer?T=cia_w&tk=${tdtToken}&X={x}&Y={y}&L={z}`\r\n                }),\r\n                name: '天地图在线影像注记图层',\r\n                id: 'img',\r\n                zIndex: -8,\r\n                visible: false\r\n            })\r\n            //深色矢量地图\r\n        const tdtVecmap_style1 = new ol.layer.Tile({\r\n                source: new ol.source.XYZ({\r\n                    url: `http://t${number}.tianditu.com/DataServer?T=vec_w&tk=${tdtToken}&X={x}&Y={y}&L={z}`\r\n                }),\r\n                name: '天地图在线深色矢量注记图层',\r\n                id: 'vec1',\r\n                zIndex: -8,\r\n                visible: false,\r\n                tileLoadFunction: function(imageTile, src) {\r\n                    const img = new Image()\r\n                    img.crossOrigin = ''\r\n                    img.onload = function() {\r\n                        const canvas = document.createElement('canvas')\r\n                        const w = img.width\r\n                        const h = img.height\r\n                        canvas.width = w\r\n                        canvas.height = h\r\n                        const context = canvas.getContext('2d')\r\n\r\n                        context.drawImage(img, 0, 0, w, h, 0, 0, w, h)\r\n                        const imageData = context.getImageData(0, 0, w, h)\r\n                        for (let i = 0; i < imageData.height; i++) {\r\n                            for (let j = 0; j < imageData.width; j++) {\r\n                                var x = (i * 4) * imageData.width + (j * 4)\r\n                                    // 关键代码\r\n                                imageData.data[x] = imageData.data[x + 1] =\r\n                                    // 运用图像学公式，设置灰度值\r\n                                    imageData.data[x + 2] = imageData.data[x] * 0.3 + imageData.data[x + 1] * 0.59 + imageData.data[x + 2] * 0.11\r\n                                    // 基于灰色，设置为蓝色\r\n                                imageData.data[x] = 55 - imageData.data[x]\r\n                                imageData.data[x + 1] = 255 - imageData.data[x + 1]\r\n                                imageData.data[x + 2] = 305 - imageData.data[x + 2]\r\n                            }\r\n                        }\r\n                        context.putImageData(imageData, 0, 0)\r\n                        imageTile.getImage().src = canvas.toDataURL('image/png')\r\n                    }\r\n                    img.src = src\r\n                }\r\n            })\r\n            //深色矢量注记\r\n        const tdtVecZjmap_style1 = new ol.layer.Tile({\r\n            source: new ol.source.XYZ({\r\n                url: `http://t${number}.tianditu.com/DataServer?T=cva_w&tk=${tdtToken}&x={x}&y={y}&l={z}`\r\n            }),\r\n            name: '天地图在线深色矢量注记图层',\r\n            id: 'vec1',\r\n            zIndex: -8,\r\n            visible: false,\r\n            tileLoadFunction: function(imageTile, src) {\r\n                const img = new Image()\r\n                img.crossOrigin = ''\r\n                img.onload = function() {\r\n                    const canvas = document.createElement('canvas')\r\n                    const w = img.width\r\n                    const h = img.height\r\n                    canvas.width = w\r\n                    canvas.height = h\r\n                    const context = canvas.getContext('2d')\r\n\r\n                    context.drawImage(img, 0, 0, w, h, 0, 0, w, h)\r\n                    const imageData = context.getImageData(0, 0, w, h)\r\n                    for (let i = 0; i < imageData.height; i++) {\r\n                        for (let j = 0; j < imageData.width; j++) {\r\n                            var x = (i * 4) * imageData.width + (j * 4)\r\n                                // 关键代码\r\n                            imageData.data[x] = imageData.data[x + 1] =\r\n                                // 运用图像学公式，设置灰度值\r\n                                imageData.data[x + 2] = imageData.data[x] * 0.3 + imageData.data[x + 1] * 0.59 + imageData.data[x + 2] * 0.11\r\n                                // 基于灰色，设置为蓝色\r\n                            imageData.data[x] = 55 - imageData.data[x]\r\n                            imageData.data[x + 1] = 255 - imageData.data[x + 1]\r\n                            imageData.data[x + 2] = 305 - imageData.data[x + 2]\r\n                        }\r\n                    }\r\n                    context.putImageData(imageData, 0, 0)\r\n                    imageTile.getImage().src = canvas.toDataURL('image/png')\r\n                }\r\n                img.src = src\r\n            }\r\n        })\r\n\r\n\r\n        const defaultOptions = {\r\n            zoom: 16, //默认16级显示\r\n        }\r\n        map = new ol.Map({\r\n                layers: [tdtVecmap, tdtVecZjmap, tdtVecmap_style1, tdtVecZjmap_style1, tdtImgmap, tdtImgZjmap], //默认加载的图层数组\r\n                // layers: [OSM], //默认加载的图层数组\r\n                target: document.getElementById(id),\r\n                view: new ol.View({\r\n                    center: [104.682515, 31.046627],\r\n                    // center: new ol.proj.fromLonLat([104.682515, 31.046627]),//默认的 3857 转 4326坐标\r\n                    zoom: defaultOptions.zoom,\r\n                    projection: \"EPSG:4326\",\r\n                    minZoom: 0, //最小缩放 级别\r\n                    maxZoom: 18, //最大缩放 级别\r\n                    smoothResolutionConstraint: false //关闭无级缩放\r\n                })\r\n            })\r\n            // map.addLayer(markerLayer)  初始化添加 marker 图层\r\n        resolve(map)\r\n    })\r\n}\r\n\r\n/**\r\n * 创建  iconmarker\r\n * @param {Array} coordinates = [lng, lat]\r\n * @param {object} iconOptions {url}\r\n * @return point\r\n */\r\nexport function createIconMarker(coordinates, iconOptions) {\r\n    //判断是否存在 marker 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const names = []\r\n    layers.forEach(element => {\r\n        const name = element.get('name')\r\n        names.push(name)\r\n    });\r\n    if (names.indexOf('marker') === -1) {\r\n        map.addLayer(markerLayer)\r\n    }\r\n\r\n    const point = new ol.Feature({\r\n        geometry: new ol.geom.Point(coordinates),\r\n        // id: iconOptions.id\r\n    });\r\n    if (iconOptions) {\r\n        const styleIcon = new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                src: iconOptions.url,\r\n                color: iconOptions.color,\r\n                scale: 0.6, //样式大小的规模\r\n            }),\r\n        });\r\n        point.setStyle(styleIcon);\r\n    }\r\n\r\n    markerLayer.getSource().addFeature(point);\r\n    return point\r\n}\r\n/**\r\n * 创建 linemarker  线串\r\n * @param {Array} coordinates = [[lng, lat], [lng, lat]]  \r\n * @return line\r\n */\r\nexport function createLineMarker(coordinates, linesStyle) {\r\n    //判断是否存在 marker 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const names = []\r\n    layers.forEach(element => {\r\n        const name = element.get('name')\r\n        names.push(name)\r\n    });\r\n    if (names.indexOf('marker') === -1) {\r\n        map.addLayer(markerLayer)\r\n    }\r\n\r\n    const line = new ol.Feature({\r\n        geometry: new ol.geom.LineString(coordinates)\r\n    })\r\n    const linestyle = new ol.style.Style({\r\n        fill: new ol.style.fill({\r\n            color: 'green',\r\n            width: 6\r\n        })\r\n    })\r\n    line.setStyle(linestyle)\r\n    markerLayer.getSource().addFeature(line)\r\n    return line\r\n}\r\n\r\n/**\r\n * 创建 polygonmarker 多边形\r\n * @param {Array} coordinates = [[lng, lat], [lng, lat]]  \r\n * @return polygon\r\n */\r\nexport function createPolygonMarker(coordinates) {\r\n    //判断是否存在 marker 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const names = []\r\n    layers.forEach(element => {\r\n        const name = element.get('name')\r\n        names.push(name)\r\n    });\r\n    if (names.indexOf('marker') === -1) {\r\n        map.addLayer(markerLayer)\r\n    }\r\n\r\n    const polygon = new ol.Feature({\r\n        geometry: new ol.geom.Polygon([coordinates])\r\n    })\r\n    const polygonstyle = new ol.style.Style({\r\n        stroke: new ol.style.Stroke({ //线 样式\r\n            color: 'blue',\r\n            width: 2\r\n        }),\r\n        fill: new ol.style.Fill({ //填充样式\r\n            color: 'rgba(0, 0, 255, 0.1)'\r\n        })\r\n    })\r\n    polygon.setStyle(polygonstyle)\r\n    markerLayer.getSource().addFeature(polygon)\r\n    return polygon\r\n}\r\n/**\r\n * 创建 circlemarker 圆形\r\n * @param {Array} center = [lng, lat]  //中心点坐标\r\n * @param {Number} radius 2         //半径\r\n * @return circle\r\n */\r\nexport function createCircleMarker(center, radius) {\r\n    //判断是否存在 marker 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const names = []\r\n    layers.forEach(element => {\r\n        const name = element.get('name')\r\n        names.push(name)\r\n    });\r\n    if (names.indexOf('marker') === -1) {\r\n        map.addLayer(markerLayer)\r\n    }\r\n\r\n    const metersPerUnit = map.getView().getProjection().getMetersPerUnit() //获取转换单位\r\n    const circleRadius = radius / metersPerUnit //将 单位为 米 的半径转为 度\r\n    const circle = new ol.Feature({\r\n        geometry: new ol.geom.Circle(center, circleRadius)\r\n    })\r\n    const circlestyle = new ol.style.Style({\r\n        stroke: new ol.style.Stroke({\r\n            color: 'blue',\r\n            width: 3\r\n        }),\r\n        fill: new ol.style.Fill({\r\n            color: 'rgb(0, 0, 255 ,.1)'\r\n        }),\r\n    })\r\n    circle.setStyle(circlestyle)\r\n    markerLayer.getSource().addFeature(circle)\r\n    return circle\r\n}\r\n/**\r\n * 清除 marker 矢量图层所有要素\r\n */\r\nexport function removeAllMarker(id) {\r\n    if (id) {\r\n        const feature = markerLayer.getSource().getFeatureById(id)\r\n        markerLayer.getSource().removeFeature(feature)\r\n    } else {\r\n        markerLayer.getSource().clear()\r\n    }\r\n}\r\n/**\r\n * 清除 marker图层  单个 feature\r\n * @param { feature } feature\r\n */\r\nexport function removeMarkerFeature(feature) {\r\n    const source = markerLayer.getSource()\r\n    source.removeFeature(feature)\r\n}\r\n/**\r\n * 地图底图切换\r\n * @param { number } 1 矢量 2 影像\r\n */\r\nexport function changeBaseMap(val) {\r\n    switch (val) {\r\n        case 1: //添加矢量图层\r\n            setLayersVisibleById('vec', true)\r\n            setLayersVisibleById('img', false)\r\n            break;\r\n\r\n        case 2: // 添加影像图层\r\n            setLayersVisibleById('img', true)\r\n            setLayersVisibleById('vec', false)\r\n            break;\r\n    }\r\n}\r\n\r\n/**\r\n *  标绘工具 地图标点、画笔功能\r\n * @param { Object } optoins {url, type, size}  \r\n * @param { String } url  //图标链接\r\n * @param { String } url  //图标大小\r\n * @param { String } type  //工具类型\r\n * @returns\r\n */\r\nexport function drawHandle(options) {\r\n    //判断是否存在 draw 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const names = []\r\n    layers.forEach(element => {\r\n        const name = element.get('name')\r\n        names.push(name)\r\n    });\r\n    if (names.indexOf('draw') === -1) {\r\n        map.addLayer(drawLayer)\r\n    }\r\n    if (options.type === 'point') {\r\n        const newStyle = new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                src: options.url,\r\n                size: options.size\r\n            })\r\n        })\r\n        const drawPoint = new ol.interaction.Draw({\r\n            source: drawLayer.getSource(),\r\n            type: 'Point',\r\n            style: newStyle //标注时鼠标样式\r\n        })\r\n        drawLayer.setStyle(newStyle) //标注后元素样式\r\n        map.addInteraction(drawPoint)\r\n    } else if (options.type === 'line') {\r\n        const newStyle = new ol.style.Style({\r\n            stroke: new ol.style.Stroke({ //绘制 完成线的样式\r\n                color: 'red',\r\n                lineCap: 'round', // 设置线的两端为圆头\r\n                width: 5\r\n            })\r\n        })\r\n        const drawLine = new ol.interaction.Draw({\r\n            source: drawLayer.getSource(),\r\n            type: 'LineString',\r\n            style: new ol.style.Style({ //标注时鼠标样式\r\n                stroke: new ol.style.Stroke({\r\n                    color: 'red',\r\n                    width: 3\r\n                }),\r\n            }),\r\n            freehand: true\r\n        })\r\n        drawLayer.setStyle(newStyle) //标注后元素样式\r\n        map.addInteraction(drawLine)\r\n    } else if (options.type === 'none') {\r\n        const draw = map.getInteractions().getArray().find((interaction) => {\r\n            return interaction instanceof ol.interaction.Draw;\r\n        });\r\n        map.removeInteraction(draw)\r\n        drawLayer.getSource().clear()\r\n    }\r\n}\r\n\r\n/**\r\n * 地图根据地址搜索定位  调用天地图接口\r\n * @param {String} value 搜索文本\r\n */\r\n\r\nexport async function geocoderAddress(value) {\r\n    //默认 参数设置\r\n    const options = {\r\n        \"mapBound\": \"73.497551,3.593695,135.103684,53.568958\", // 查询地图范围  默认中国\r\n        \"level\": 12, //目前查询级别\r\n        \"queryType\": 7, //搜索类型  7 地名搜索\r\n        \"count\": 5, // 返回结果的数量\r\n        \"keyWord\": value\r\n    }\r\n    return fetch(`http://api.tianditu.gov.cn/v2/search?postStr={\"keyWord\":\\\"${value}\\\",\"level\":${options.level},\"mapBound\":\\\"${options.mapBound}\\\",\"queryType\":${options.queryType},\"start\":0,\"count\":${options.count}}&type=query&tk=${tdtToken}`).then(response => response.json()).then(res => {\r\n        if (res.pois) {\r\n            const lonlat = res.pois[0].lonlat.split(\",\")\r\n            const coordinates = [Number(lonlat[0]), Number(lonlat[1])]\r\n            flyToXY(coordinates)\r\n            return res.pois\r\n        } else if (res.statistics) {\r\n            const lonlat = res.statistics.allAdmins[0].lonlat.split(\",\")\r\n            const coordinates = [Number(lonlat[0]), Number(lonlat[1])]\r\n            flyToXY(coordinates)\r\n            return res.statistics\r\n        } else if (res.area) {\r\n            const lonlat = res.area[0].lonlat.split(\",\")\r\n            const coordinates = [Number(lonlat[0]), Number(lonlat[1])]\r\n            flyToXY(coordinates)\r\n            return res.area\r\n        }\r\n    })\r\n}\r\n/**\r\n * 根据经纬度坐标 进行 地址解析  调用天地图接口\r\n * @param {Array} coordinate  [lon, lat]\r\n */\r\nexport function geocoderLonlat(coordinate) {\r\n    console.log(coordinate);\r\n    const options = {\r\n        lon: coordinate[0],\r\n        lat: coordinate[1],\r\n    }\r\n    return new Promise(resolve => {\r\n        fetch(`http://api.tianditu.gov.cn/geocoder?postStr={'lon':${options.lon},'lat':${options.lat},'ver':1}&type=geocode&tk=${tdtToken}`).then(response => response.json()).then(res => {\r\n            if (res.status == '0') {\r\n                let address = res.result.formatted_address\r\n                resolve(address)\r\n            } else {\r\n                alert(res.result.getMsg())\r\n            }\r\n        })\r\n    })\r\n}\r\n/**\r\n * 地图根据经纬度定位\r\n * @param { Array } coordinates = [lng, lat]  \r\n */\r\n\r\nexport function flyToXY(coordinates) {\r\n    map.getView().animate({\r\n        center: coordinates,\r\n        duration: 1000,\r\n        zoom: 16\r\n    })\r\n}\r\n\r\n/**\r\n * 测量工具\r\n * @param { String } type\r\n * line  测量线段\r\n * area  测量面积\r\n * none  清除测量\r\n */\r\nlet measureLayer //测量图层\r\nlet measureElements = [] //存放 Overlay dom 元素\r\nexport function measureHandle(type) {\r\n    let listener; //监听正在创建的几何\r\n    let sketch;\r\n    let measureTooltipElement;\r\n    let measureTooltip;\r\n\r\n    let newstyle = new ol.style.Style({\r\n        fill: new ol.style.Fill({\r\n            color: \"rgb(255, 0, 0, 0.2)\",\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n            color: \"red\",\r\n            width: 3,\r\n        }),\r\n        image: new ol.style.Circle({\r\n            radius: 4,\r\n            fill: new ol.style.Fill({\r\n                color: \"#ffcc33\",\r\n            }),\r\n        }),\r\n    })\r\n    if (!measureLayer) {\r\n        measureLayer = new ol.layer.Vector({\r\n            source: new ol.source.Vector(),\r\n            style: new ol.style.Style({\r\n                fill: new ol.style.Fill({\r\n                    color: \"rgb(255, 255, 255, 0.2)\",\r\n                }),\r\n                stroke: new ol.style.Stroke({\r\n                    color: \"#ffcc33\",\r\n                    width: 2,\r\n                }),\r\n                image: new ol.style.Circle({\r\n                    radius: 7,\r\n                    fill: new ol.style.Fill({\r\n                        color: \"#ffcc33\",\r\n                    }),\r\n                }),\r\n            }),\r\n        });\r\n        map.addLayer(measureLayer)\r\n    }\r\n    const drawMeasure = {}\r\n    const handleDis = new ol.interaction.Draw({\r\n        source: measureLayer.getSource(),\r\n        type: \"LineString\",\r\n        style: newstyle,\r\n    });\r\n\r\n    const handleArea = new ol.interaction.Draw({\r\n        source: measureLayer.getSource(),\r\n        type: \"Polygon\",\r\n        style: newstyle\r\n    })\r\n\r\n    if (type === 'line') {\r\n        drawMeasure.handleType = handleDis\r\n    } else if (type === 'area') {\r\n        drawMeasure.handleType = handleArea\r\n    } else if (type === 'none') {\r\n        measureLayer.getSource().clear()\r\n        for (let i = 0; i < measureElements.length; i++) {\r\n            map.removeOverlay(measureElements[i])\r\n        }\r\n        measureElements = []\r\n        return\r\n    }\r\n    map.addInteraction(drawMeasure.handleType)\r\n    createMeasureTooltip();\r\n    drawMeasure.handleType.on(\"drawstart\", evt => {\r\n        cancelDoubleClick() //取消鼠标双击\r\n        sketch = evt.feature\r\n        let tooltipCoord = evt.coordinate\r\n        listener = sketch.getGeometry().on(\"change\", (evt) => {\r\n            const geom = evt.target\r\n            let output\r\n            if (geom instanceof ol.geom.LineString) {\r\n                let p = geom.clone();\r\n                let circleIn4326 = p.transform(\r\n                    //默认坐标系 转为 经纬度84\r\n                    map.getView().getProjection(),\r\n                    \"EPSG:3857\"\r\n                );\r\n                output = formatLength(circleIn4326)\r\n                tooltipCoord = geom.getLastCoordinate();\r\n            } else if (geom instanceof ol.geom.Polygon) {\r\n                let p = geom.clone();\r\n                let circleIn4326 = p.transform(\r\n                    map.getView().getProjection(),\r\n                    \"EPSG:3857\"\r\n                );\r\n                output = formatArea(circleIn4326);\r\n                tooltipCoord = geom.getInteriorPoint().getCoordinates();\r\n            }\r\n            measureTooltipElement.innerHTML = output;\r\n            measureTooltip.setPosition(tooltipCoord);\r\n        })\r\n    })\r\n    drawMeasure.handleType.on(\"drawend\", () => {\r\n            sketch = null\r\n            measureTooltipElement = null;\r\n            ol.Observable.unByKey(listener)\r\n            map.removeInteraction(drawMeasure.handleType)\r\n            drawMeasure.handleType.setActive()\r\n        })\r\n        //创建 信息展示lable\r\n    function createMeasureTooltip() {\r\n        if (measureTooltipElement) {\r\n            measureTooltipElement.parentNode.removeChild(measureTooltipElement);\r\n        }\r\n        measureTooltipElement = document.createElement('div');\r\n        measureTooltipElement.className = 'tooltip tooltip-measure';\r\n        measureTooltip = new ol.Overlay({\r\n            element: measureTooltipElement,\r\n            offset: [0, -15],\r\n            positioning: 'bottom-center'\r\n        });\r\n        measureElements.push(measureTooltip)\r\n        map.addOverlay(measureTooltip);\r\n    }\r\n}\r\n/**\r\n * 面积计算函数\r\n * @param { geom } Polygon\r\n */\r\nexport function formatArea(polygon) {\r\n    const area = ol.sphere.getArea(polygon);\r\n    let output;\r\n    if (area > 10000) {\r\n        output =\r\n            Math.round((area / 1000000) * 100) / 100 + \" \" + \"km<sup>2</sup>\";\r\n    } else {\r\n        output = Math.round(area * 100) / 100 + \" \" + \"m<sup>2</sup>\";\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * 长度计算函数\r\n * @param { geom } LineString\r\n */\r\nexport function formatLength(line) {\r\n    const length = ol.sphere.getLength(line);\r\n    let output;\r\n    if (length > 100) {\r\n        output = Math.round((length / 1000) * 100) / 100 + \" \" + \"km\";\r\n    } else {\r\n        output = Math.round(length * 100) / 100 + \" \" + \"m\";\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * 取消 默认鼠标左键 双击事件\r\n */\r\nexport function cancelDoubleClick() {\r\n    const dblClick = map\r\n        .getInteractions()\r\n        .getArray()\r\n        .find((interaction) => {\r\n            return interaction instanceof ol.interaction.DoubleClickZoom;\r\n        });\r\n    map.removeInteraction(dblClick);\r\n}\r\n// /**\r\n//  * 添加多种 图层\r\n// */\r\n//  export function addFeatureLayer() {\r\n//     //判断是否存在 marker 图层并添加到map\r\n//     const layers = map.getAllLayers()\r\n//     const names= []\r\n//     layers.forEach(element => {\r\n//         const name = element.get('name')\r\n//         names.push(name)\r\n//     });\r\n//     if (names.indexOf('marker') === -1) {\r\n//         map.addLayer(markerLayer)\r\n//     }\r\n// }\r\n/**\r\n * 鼠标单击获取经纬度 和 地址\r\n */\r\nexport function onClicktoLonlat() {\r\n    return new Promise(resolve => {\r\n        map.once(\"singleclick\", (evt) => {\r\n            geocoderLonlat(evt.coordinate)\r\n                .then(res => {\r\n                    alert(res)\r\n                    const result = {\r\n                        lon: evt.coordinate[0],\r\n                        lat: evt.coordinate[1],\r\n                        address: res\r\n                    }\r\n                    resolve(result)\r\n                })\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 根据图层 ID 添加图层\r\n * @param { Number } id\r\n */\r\nexport function addLayerByID(id) {\r\n    //判断是否存在 id 图层并添加到map\r\n    const layers = map.getAllLayers()\r\n    const ids = []\r\n    layers.forEach(element => {\r\n        const id = element.get('id')\r\n        if (id != undefined) {\r\n            ids.push(id)\r\n        }\r\n    });\r\n    if (ids.indexOf(id) === -1) {\r\n        const layer = new ol.layer.Vector({\r\n            source: new ol.source.Vector(),\r\n            id: id,\r\n            style: null // 为了设置单个要素 隐藏\r\n        })\r\n        map.addLayer(layer)\r\n    }\r\n}\r\n/**\r\n * 根据图层 ID 删除图层\r\n * @param { Number } id\r\n */\r\nexport function removeLayerByID(id) {\r\n    const layer = getLayerById(id)\r\n    map.removeLayer(layer) //清除图层\r\n}\r\n\r\n/**\r\n * 根据图层 ID 删除相同ID图层数组\r\n * @param { Number } id\r\n */\r\nexport function removeLayersByID(id) {\r\n    const layers = getLayersById(id)\r\n    layers.forEach((layer) => {\r\n        map.removeLayer(layer) //清除图层\r\n    })\r\n}\r\n\r\n\r\n/**\r\n * 根据图层ID  获取图层\r\n * @param { Number } id\r\n * @reture layer\r\n */\r\nexport function getLayerById(id) {\r\n    const layers = map.getAllLayers()\r\n    let layer\r\n    layers.forEach(element => {\r\n        const layerId = element.get('id')\r\n        if (id === layerId) {\r\n            layer = element\r\n        }\r\n    });\r\n    return layer\r\n}\r\n\r\n\r\n/**\r\n * 根据图层ID  获取相同ID图层数组\r\n * @param { Number } id\r\n * @reture { Array } layers\r\n */\r\nexport function getLayersById(id) {\r\n    const layers = map.getAllLayers()\r\n    let layerArray = []\r\n    layers.forEach(element => {\r\n        const layerId = element.get('id')\r\n        if (id === layerId) {\r\n            layerArray.push(element)\r\n        }\r\n    });\r\n    return layerArray\r\n}\r\n\r\n/**\r\n * 通过 图层 ID  控制 图层的 显隐\r\n * @param { Number } id\r\n * @param { Bool } bool\r\n */\r\nexport function setLayerVisibleById(id, bool) {\r\n    const layer = getLayerById(id)\r\n    layer.setVisible(bool)\r\n}\r\n\r\n/**\r\n * 通过 图层 ID  控制 相同ID图层数组 显隐\r\n * @param { Number } id\r\n * @param { Bool } bool\r\n */\r\nexport function setLayersVisibleById(id, bool) {\r\n    const layers = getLayersById(id)\r\n    layers.forEach((layer) => {\r\n        layer.setVisible(bool)\r\n    })\r\n}\r\n\r\n/**\r\n * 根据 lon,lat  url layerId 创建 图标点\r\n * @param { Object } options { url,layerId }\r\n * @param { Array } coordinate [lon, lat]\r\n * @return point\r\n */\r\n\r\nexport function addIconPoint(coordinate, options) {\r\n    const style = new ol.style.Style({\r\n        image: new ol.style.Icon({\r\n            src: options.url,\r\n            color: options.color,\r\n            scale: 0.6,\r\n        })\r\n    })\r\n    const point = new ol.Feature({\r\n        geometry: new ol.geom.Point(coordinate),\r\n        layerId: options.layerId,\r\n        properties: options.properties\r\n    })\r\n    point.setStyle(style)\r\n    point.setProperties({ oldStyle: style }) // 保存一份style 用做样式显隐 控制点的显隐\r\n    const layer = getLayerById(options.layerId)\r\n    if (!layer) {\r\n        addLayerByID(options.layerId)\r\n    }\r\n    addPointToLayerById(point)\r\n    return point\r\n}\r\n\r\n/**\r\n * 根据 起点,终点经纬度 \\ layerId 创建 管线\r\n * @param { Object } options { width,layerId, pos: [x, y, x, y]}\r\n * @param { Array } points [point, point]  point[lon, lat]\r\n * @return line\r\n */\r\nexport function addLine(options) {\r\n\r\n    const arr = options.pos;\r\n    const coordinates = [];\r\n    for (let i = 0; i < arr.length; i += 2) {\r\n        const coordinate = [arr[i], arr[i + 1]];\r\n        coordinates.push(coordinate);\r\n    }\r\n    const style = new ol.style.Style({\r\n        fill: new ol.style.Fill({\r\n            color: \"green\",\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n            color: \"green\",\r\n            width: options.width ? options.width : 10,\r\n        }),\r\n    });\r\n    const line = new ol.Feature({\r\n        geometry: new ol.geom.LineString(coordinates),\r\n        layerId: options.layerId,\r\n        properties: options.properties\r\n    })\r\n    line.setStyle(style)\r\n    const layer = getLayerById(options.layerId)\r\n    if (!layer) {\r\n        addLayerByID(options.layerId)\r\n    }\r\n    addLineToLayerById(line)\r\n    return line\r\n}\r\n\r\n/**\r\n * 将创建的 Point 添加到 对应 layerId 的图层中\r\n * @param { Feature } point\r\n */\r\nexport function addPointToLayerById(point) {\r\n    const pointId = point.get('layerId')\r\n    const layer = getLayerById(pointId)\r\n    layer.getSource().addFeature(point)\r\n}\r\n/**\r\n * 将创建的 Line 添加到 对应 layerId 的图层中\r\n * @param { Feature } line\r\n */\r\nexport function addLineToLayerById(line) {\r\n    const layerId = line.get('layerId')\r\n    const layer = getLayerById(layerId)\r\n    layer.getSource().addFeature(line)\r\n}\r\n\r\n\r\n/**\r\n * 根据 几何要素id 删除 layer 图层中 单个几何要素\r\n * @param {Number} id\r\n * @param {layer} layer 图层参数\r\n */\r\nexport function removeLayerFeatureByID(id, layer) {\r\n    const source = layer.getSource()\r\n    const features = source.getFeatures()\r\n    features.forEach((feature) => {\r\n        if (id && feature.id == id) {\r\n            source.removeFeature(feature)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n/**\r\n * 根据 layerId 删除 layer 图层中 所有几何要素\r\n * @param {Number} layerId\r\n */\r\nexport function removeAllFeaturesByLayerID(id) {\r\n    const layer = getLayerById(id)\r\n    if (layer) { //判断是否存在 layer\r\n        const features = layer.getSource().getFeatures()\r\n        features.forEach((feature) => {\r\n            layer.getSource().removeFeature(feature)\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * 创建一个 热力图 图层\r\n */\r\nexport function createHeatMapLayer() {\r\n    const colors = [ //热图的颜色渐变，指定为 CSS 颜色字符串数组。\r\n        \"#2200FF\",\r\n        \"#16D9CC\",\r\n        \"#4DEE12\",\r\n        \"#E8D225\",\r\n        \"#EF1616\"\r\n    ]\r\n\r\n    const codelist = [\r\n        { lng: 104.061902, lat: 30.609503 },\r\n        { lng: 106.619126, lat: 30.474142 },\r\n        { lng: 104.673612, lat: 31.492565 },\r\n        { lng: 103.031653, lat: 30.018895 },\r\n        { lng: 104.797794, lat: 29.368322 },\r\n        { lng: 104.610964, lat: 28.781347 },\r\n        { lng: 101.592433, lat: 30.426712 },\r\n    ]\r\n    const heatmapLayer = new ol.layer.Heatmap({\r\n        source: new ol.source.Vector(),\r\n        gradient: colors,\r\n        radius: 15, //以像素为单位的 半径大小\r\n        blur: 30, //以像素为单位的模糊大小\r\n    })\r\n    map.addLayer(heatmapLayer)\r\n    for (let i = 0; i < codelist.length; i++) {\r\n        const coords = [codelist[i].lng, codelist[i].lat]\r\n        const point = new ol.Feature({\r\n            geometry: new ol.geom.Point(coords)\r\n        })\r\n        heatmapLayer.getSource().addFeature(point)\r\n    }\r\n}\r\n\r\n\r\nlet markerPickEventCallback = undefined\r\n    /**\r\n     * feature 鼠标点击事件\r\n     */\r\nexport function addMarkerPickEvent(callback) {\r\n    markerPickEventCallback = callback\r\n}\r\nexport function singleClickFeatureEvent() {\r\n    map.on('singleclick', function(e) {\r\n        const markerPickFeature = map.getFeaturesAtPixel(e.pixel, {\r\n            layerFilter: function(layer) {\r\n                return layer.get(\"type\") === \"markerLayer\"; //标注图层要素\r\n            },\r\n        });\r\n        if (map.hasFeatureAtPixel(e.pixel) && markerPickFeature.length > 0 && markerPickEventCallback) {\r\n            markerPickEventCallback(markerPickFeature)\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\n/**\r\n * 给临时创建的图标点 绑定 ID\r\n * @param { feature } point\r\n * @param { string } id\r\n */\r\nexport function bindIconPointMessge(point, id, options) {\r\n    //  console.log(id,'id');\r\n    if (point && id) {\r\n        point.setId(id)\r\n    }\r\n    if (point && options) {\r\n        point.setProperties(options)\r\n    }\r\n}\r\n\r\n/**\r\n * 根据 Dom id 创建一个 overlay\r\n * @param { Object } options\r\n * options.id  DOM id\r\n * options.offset  [10, 10]\r\n */\r\nexport function createOverlay(id, options) {\r\n    const oldOverlay = map.getOverlayById(id)\r\n    if (oldOverlay) {\r\n        map.removeOverlay(oldOverlay)\r\n    }\r\n    const newOverlay = new ol.Overlay({\r\n        element: document.getElementById(options.id),\r\n        offset: options.offset,\r\n        id: id\r\n    })\r\n    newOverlay.setPosition(options.coordinate);\r\n    map.addOverlay(newOverlay)\r\n    return newOverlay\r\n}\r\n/**\r\n * 根据 circle  feature 对所有图层要素进行筛选\r\n * @param { bool } true\r\n * @param { feature } circle 要素\r\n */\r\nexport function selectByCircle(bool, circle) {\r\n    const layers = map.getAllLayers()\r\n    let ZYlayers = []\r\n    let ZYfeatures = []\r\n    layers.forEach(element => {\r\n        const layerId = element.get('id')\r\n        if (layerId) {\r\n            if (layerId.toString().indexOf('ZY') > -1) {\r\n                ZYlayers.push(element)\r\n            }\r\n        }\r\n    })\r\n    ZYlayers.forEach(element => {\r\n        const features = element.getSource().getFeatures()\r\n        ZYfeatures.push(...features)\r\n    })\r\n    if (!bool) {\r\n        ZYfeatures.forEach(element => {\r\n            const oldStyle = element.getProperties().oldStyle\r\n            element.setStyle(oldStyle)\r\n        })\r\n        return\r\n    }\r\n    ZYfeatures.forEach(element => {\r\n        const point = element.getGeometry()\r\n        const oldStyle = element.getProperties().oldStyle\r\n        if (pointInsideCircle(point, circle) === false) { element.setStyle(null) } else if (pointInsideCircle(point, circle) === true) {\r\n            element.setStyle(oldStyle)\r\n        }\r\n    })\r\n}\r\n/**\r\n * 判断点是否在圆内\r\n * @param { geom } point\r\n * @param { feature } circle\r\n * @returns bool\r\n */\r\nexport function pointInsideCircle(point, circle) {\r\n    const radius = circle.getGeometry().getRadius()\r\n    const coordinatesPoint = point.getCoordinates()\r\n    const coordinatesCenter = circle.getGeometry().getCenter()\r\n    if (radius === 0) return false\r\n    var dx = coordinatesCenter[0] - coordinatesPoint[0]\r\n    var dy = coordinatesCenter[1] - coordinatesPoint[1]\r\n    return dx * dx + dy * dy <= radius * radius\r\n}\r\n\r\n/**\r\n * 根据图层ID 筛选图层上的要素\r\n * @param {*} event\r\n * @param {*} layerId\r\n * @returns promise\r\n */\r\nexport function layerFilter(event, layerId) {\r\n    return new Promise((resolve, reject) => {\r\n        const feature = map.getFeaturesAtPixel(event.pixel, {\r\n            layerFilter: function(layer) {\r\n                return layer.get(\"id\") === layerId; //标注图层要素\r\n            },\r\n        });\r\n        if (map.hasFeatureAtPixel(event.pixel) && feature.length > 0) {\r\n            resolve({\r\n                id: feature[0].getId(),\r\n                longitude: feature[0].getProperties().longitude,\r\n                latitude: feature[0].getProperties().latitude,\r\n                pixel: event.pixel, // 鼠标位置\r\n            })\r\n        } else {\r\n            reject()\r\n        }\r\n    })\r\n}\r\n\r\n//wms图层 鼠标经过事件\r\nexport function initHoverS3MEvent(callback) {\r\n    const that = this;\r\n    //定义鼠标节流操作\r\n    function throttle(fn, delay = 500) {\r\n        let timer = null\r\n        return function() {\r\n            if (timer) {\r\n                return\r\n            }\r\n            timer = setTimeout(() => {\r\n                fn.apply(this, arguments)\r\n                timer = null\r\n            }, delay);\r\n        }\r\n    }\r\n    //鼠标防抖操作\r\n    function debounce(fn, delay = 500) {\r\n        let timer = null\r\n        return function() {\r\n            if (timer != null) {\r\n                clearTimeout(timer)\r\n            }\r\n            timer = setTimeout(() => {\r\n                fn.apply(this, arguments)\r\n            }, delay);\r\n        }\r\n    }\r\n\r\n    function pointMoveFn(e) {\r\n        {\r\n            const pslFeature = that.getWMSImageFeature(e, PSLLayer);\r\n            const pspFeature = that.getWMSImageFeature(e, PSPLayer);\r\n            let pslresult, pspresult;\r\n\r\n            const result1 = pspFeature.then((res) => {\r\n                if (res) {\r\n                    pspresult = {\r\n                        layer: 'PSP_0',\r\n                        id: res.properties.SMID,\r\n                        windowPosition: { x: e.pixel[0], y: e.pixel[1] },\r\n                    };\r\n                }\r\n            });\r\n\r\n            const result2 = pslFeature.then((res) => {\r\n                if (res) {\r\n                    pslresult = {\r\n                        layer: 'PSL_1',\r\n                        id: res.properties.SMID,\r\n                        windowPosition: { x: e.pixel[0], y: e.pixel[1] },\r\n                    };\r\n                }\r\n            });\r\n\r\n            const result = Promise.all([result1, result2]);\r\n\r\n            result.then(() => {\r\n                if (\r\n                    ((pslresult && pspresult) || (!pslresult && pspresult)) &&\r\n                    PSPLayer.getVisible() === true\r\n                ) {\r\n                    callback(pspresult);\r\n                } else if (\r\n                    pslresult &&\r\n                    !pspresult &&\r\n                    PSLLayer.getVisible() === true\r\n                ) {\r\n                    callback(pslresult);\r\n                } else {\r\n                    callback(undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    that.map.on(\"pointermove\", debounce((e) => {\r\n        pointMoveFn(e)\r\n    }, 500))\r\n}\r\n\r\n//WMS图层点击事件\r\nexport function initPickS3MEvent(callback) {\r\n    const that = this;\r\n    that.map.on(\"singleclick\", (e) => {\r\n        const pslFeature = that.getWMSImageFeature(e, PSLLayer);\r\n        const pspFeature = that.getWMSImageFeature(e, PSPLayer);\r\n        let pslresult, pspresult;\r\n\r\n        const result1 = pspFeature.then((res) => {\r\n            if (res) {\r\n                pspresult = {\r\n                    layer: 'PSP_0',\r\n                    id: res.properties.SMID,\r\n                };\r\n            }\r\n        });\r\n\r\n        const result2 = pslFeature.then((res) => {\r\n            if (res) {\r\n                pslresult = {\r\n                    layer: 'PSL_1',\r\n                    id: res.properties.SMID,\r\n                };\r\n            }\r\n        });\r\n\r\n        const result = Promise.all([result1, result2]);\r\n\r\n        result.then(() => {\r\n            if (\r\n                ((pslresult && pspresult) || (!pslresult && pspresult)) &&\r\n                PSPLayer.getVisible() === true\r\n            ) {\r\n                callback(pspresult);\r\n            } else if (\r\n                pslresult &&\r\n                !pspresult &&\r\n                PSLLayer.getVisible() === true\r\n            ) {\r\n                callback(pslresult);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n//获取WMS图层的要素数据\r\nexport async function getWMSImageFeature(evt, layer) {\r\n    const viewResolution = map.getView().getResolution();\r\n    const url = layer\r\n        .getSource()\r\n        .getFeatureInfoUrl(evt.coordinate, viewResolution, \"EPSG:4326\", {\r\n            INFO_FORMAT: \"application/json\",\r\n        });\r\n    if (url) {\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                if (res.features.length > 0) {\r\n                    return res.features[0];\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 根据类型添加管网管线图层--WMS图层\r\n * @param {String} type  === 'PSL' || 'PSP'\r\n */\r\nexport function addWMSLayer(type) {\r\n    const layers = map.getAllLayers()\r\n    const ids = []\r\n    layers.forEach(element => {\r\n        const id = element.get('id')\r\n        if (id != undefined) {\r\n            ids.push(id)\r\n        }\r\n    })\r\n    if (ids.indexOf(type) === -1 && type === 'PSP') {\r\n        map.addLayer(PSPLayer)\r\n    }\r\n    if (ids.indexOf(type) === -1 && type === 'PSL') {\r\n        map.addLayer(PSLLayer)\r\n    }\r\n}\r\n\r\n/**\r\n * 切换底图样式 深色\\浅色\r\n * @param {*} val\r\n */\r\nexport function setStyle(val) {\r\n    if (val === '') {\r\n        tdtVecmap_style1.setVisible(false)\r\n        tdtVecZjmap_style1.setVisible(false)\r\n        tdtVecmap.setVisible(true)\r\n        tdtVecZjmap.setVisible(true)\r\n    } else if (val === 'indigo') {\r\n        tdtVecmap.setVisible(false)\r\n        tdtVecZjmap.setVisible(false)\r\n        tdtVecmap_style1.setVisible(true)\r\n        tdtVecZjmap_style1.setVisible(true)\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 轨迹回放 功能\r\n * @param {*} map  // 地图实例对象\r\n * @param { Object } \r\n * options {\r\n *    coordinates : [] //轨迹线坐标数组串\r\n *    startUrl：url //轨迹起点图标\r\n *    endUrl //轨迹终点图标\r\n *    midUrl //轨迹运动点图标\r\n * }\r\n */\r\nexport function trackPlayBack(map, options) {\r\n\r\n    // speed = options.speed ? options.speed : 100\r\n    this._coordinates = options.coordinates ? options.coordinates : []\r\n        //定义 起、经、终点图标地址\r\n    let startIcon = options.startUrl ? options.startUrl : 'https://a.amap.com/jsapi/static/image/plugin/marker/start.png'\r\n    let endIcon = options.endtUrl ? options.endUrl : 'https://a.amap.com/jsapi/static/image/plugin/marker/end.png'\r\n    let midIcon = options.midUrl ? options.midUrl : 'https://a.amap.com/jsapi/static/image/plugin/marker/mid.png'\r\n\r\n    let distance = 0\r\n    let lastTime, route, geoMarker, position\r\n        //定义初始速度\r\n    let speed = options.speed ? options.speed : 50\r\n\r\n    // 定义 起终点坐标、轨迹线样式\r\n    const styles = {\r\n        'route': new ol.style.Style({\r\n            stroke: new ol.style.Stroke({\r\n                width: 6,\r\n                color: [237, 212, 0, 0.8],\r\n            }),\r\n        }),\r\n        'startIcon': new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                anchor: [0.5, 1],\r\n                src: startIcon,\r\n                scale: 0.5\r\n            }),\r\n        }),\r\n        'endIcon': new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                anchor: [0.5, 1],\r\n                src: endIcon,\r\n                scale: 0.5\r\n            }),\r\n        }),\r\n        'geoMarker': new ol.style.Style({\r\n            // image: new ol.style.Circle({\r\n            //     radius: 7,\r\n            //     fill: new ol.style.Fill({ color: 'black' }),\r\n            //     stroke: new ol.style.Stroke({\r\n            //         color: 'white',\r\n            //         width: 2,\r\n            //     }),\r\n            // }),\r\n            image: new ol.style.Icon({\r\n                anchor: [0.5, 1],\r\n                src: midIcon,\r\n                scale: 0.5\r\n            }),\r\n        }),\r\n    };\r\n    //定义 矢量数据加载的图层\r\n    let vectorLayer = new ol.layer.Vector({\r\n        source: new ol.source.Vector(),\r\n        style: function(feature) {\r\n            return styles[feature.get('type')];\r\n        },\r\n        name: 'trackPlayBack'\r\n    });\r\n\r\n    map.addLayer(vectorLayer);\r\n\r\n    //定义内部属性\r\n    Object.defineProperties(trackPlayBack.prototype, {\r\n        // coordinates: {\r\n        //     get: function() {\r\n        //         return this._coordinates\r\n        //     },\r\n        //     set: function(value) {\r\n        //         this._coordinates = value\r\n        //     },\r\n        // },\r\n        speed: {\r\n            get: function() {\r\n                return speed\r\n            },\r\n            set: function(value) {\r\n                speed = value\r\n            },\r\n        },\r\n    })\r\n    if (this._coordinates.length > 0) {\r\n        route = new ol.geom.LineString(this._coordinates)\r\n        const routeFeature = new ol.Feature({\r\n            geometry: route,\r\n            type: 'route'\r\n        })\r\n\r\n        const startMarker = new ol.Feature({\r\n            type: 'startIcon',\r\n            geometry: new ol.geom.Point(route.getFirstCoordinate()),\r\n        })\r\n        const endMarker = new ol.Feature({\r\n            type: 'endIcon',\r\n            geometry: new ol.geom.Point(route.getLastCoordinate()),\r\n        })\r\n        position = startMarker.getGeometry().clone();\r\n\r\n        geoMarker = new ol.Feature({\r\n            type: 'geoMarker',\r\n            geometry: position,\r\n        })\r\n\r\n        vectorLayer.getSource().addFeature(routeFeature)\r\n        vectorLayer.getSource().addFeature(geoMarker)\r\n        vectorLayer.getSource().addFeature(startMarker)\r\n        vectorLayer.getSource().addFeature(endMarker)\r\n    } else {\r\n        alert('请先定义线坐标串数组：coordinates')\r\n    }\r\n\r\n    //定义对象内部方法\r\n    trackPlayBack.prototype.startAnimation = function() {\r\n        lastTime = Date.now();\r\n        vectorLayer.on('postrender', moveFeature);\r\n        // hide geoMarker and trigger map render through change event\r\n        // geoMarker.setGeometry(null);\r\n    }\r\n\r\n    trackPlayBack.prototype.endAnimation = function() {\r\n            // Keep marker at current animation position\r\n            geoMarker.setGeometry(position);\r\n            vectorLayer.un('postrender', moveFeature);\r\n        }\r\n        // console.log(speed, 'speed');\r\n\r\n    function moveFeature(event) {\r\n        // const that = this;\r\n\r\n        const time = event.frameState.time;\r\n        const elapsedTime = time - lastTime;\r\n        distance = (distance + (speed * elapsedTime) / 1e6) % 2;\r\n        if (distance > 1) {\r\n            geoMarker.setGeometry(null)\r\n            return\r\n        }\r\n        lastTime = time;\r\n        const currentCoordinate = route.getCoordinateAt(\r\n            distance > 1 ? 2 - distance : distance\r\n        );\r\n        position.setCoordinates(currentCoordinate);\r\n        const vectorContext = new ol.render.getVectorContext(event);\r\n        vectorContext.setStyle(styles.geoMarker);\r\n        vectorContext.drawGeometry(position);\r\n        // console.log(distance, 'distance');\r\n        // tell OpenLayers to continue the postrender animation\r\n        map.render();\r\n    }\r\n}","import { render } from \"./OpenlayersView.vue?vue&type=template&id=4d53e15e&scoped=true\"\nimport script from \"./OpenlayersView.vue?vue&type=script&lang=js\"\nexport * from \"./OpenlayersView.vue?vue&type=script&lang=js\"\n\nimport \"./OpenlayersView.vue?vue&type=style&index=0&id=4d53e15e&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4d53e15e\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"mapbox\">\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoicWh5MTEiLCJhIjoiY2xhdzAyaXVyMGF0eDNzbXppdnU5bXhzbCJ9.Epb2RA7TYzUCS5e9hvg40A'; //token引用\r\nexport default {\r\n  name: 'MapBoxView',\r\n  data () {\r\n    return {\r\n      center: {\r\n        lat: 30.666901,\r\n        lng: 104.070929\r\n      },\r\n      zoom: 13\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initMap()\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const map = new mapboxgl.Map({\r\n        container:'mapbox',\r\n        style:'mapbox://styles/qhy11/clcj943s7000b15ph2mi0eac6',\r\n        center: this.center,\r\n        zoom: this.zoom\r\n      })\r\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right')\r\n      map.addControl(new mapboxgl.FullscreenControl(), 'bottom-right')\r\n      map.addControl(new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true\r\n        },\r\n        trackUserLocation: true\r\n      }), 'bottom-right')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#mapbox {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>","import { render } from \"./MapBoxView.vue?vue&type=template&id=6ee72d78&scoped=true\"\nimport script from \"./MapBoxView.vue?vue&type=script&lang=js\"\nexport * from \"./MapBoxView.vue?vue&type=script&lang=js\"\n\nimport \"./MapBoxView.vue?vue&type=style&index=0&id=6ee72d78&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ee72d78\"]])\n\nexport default __exports__","<template>\r\n    <div id=\"AMap\">\r\n        <AmapLayers @sendStyleLayer=\"setStyleLayer\"/>\r\n        <locationbar :lonlatObject=\"lonlatOptions\"/>\r\n        <div class=\"toolBar\">\r\n            <el-butt @click=\"change\">测试按钮</el-butt>\r\n        </div>\r\n       \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nvar map\r\n// import AMapLoader from '@amap/amap-jsapi-loader';\r\n// import { shallowRef } from '@vue/reactivity'\r\nimport datas from './data.json'\r\nimport citys from './citys'\r\nimport AmapLayers from \"./LayerMapTree.vue\"\r\nimport locationbar from \"./LocationBar.vue\"\r\nexport default {\r\n    name:'AMapView',\r\n   \r\n    components: {\r\n        AmapLayers,\r\n        locationbar,\r\n    },\r\n    data() {\r\n        return { \r\n            lonlatOptions: {  //初始化默认参数\r\n                // lon: 104.070929,\r\n                // lat: 30.666901,\r\n                lon: 107.472859,\r\n                lat: 31.210750,\r\n                zoom: 15\r\n            }, // 实时经纬度和级别参数对象\r\n            styleLayer: '', //从子组件接收的 底图 style \r\n            arrData:[]\r\n        }\r\n    },\r\n    // setup(){\r\n    //     const map = shallowRef(null);\r\n    //     return{\r\n    //         map\r\n    //     }\r\n    // },\r\n    mounted () {\r\n            this.initMap()\r\n            this.getLngLatPosition()    \r\n    },\r\n    created () {\r\n        //获取数据\r\n        this.getData()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n            // return new Promise((resolve) => { \r\n                this.map = new AMap.Map('AMap', {\r\n                    zoom: this.lonlatOptions.zoom,//级别\r\n                    center: [this.lonlatOptions.lon, this.lonlatOptions.lat],//中心点坐标\r\n                    viewMode:'3D'//使用3D视图\r\n                });\r\n                // this.addWMSLayer()\r\n                this.addPoint()\r\n            //     resolve(this.map);\r\n            this.map.on('click', (e)=>{\r\n                console.log(e.target,'e');\r\n            })\r\n            // });\r\n        },\r\n        //获取数据的接口\r\n        getData(){\r\n            const features = datas.features\r\n            features.forEach(element => {\r\n                this.arrData.push(element.properties)\r\n            });\r\n        },\r\n        // initMap(){\r\n        //     // AMapLoader.reset()\r\n        //     AMapLoader.load({\r\n        //         key: \"15ad6692e7ef0971d5912b013e1bb3e3\",             // 申请好的Web端开发者Key，首次调用 load 时必填\r\n        //         version:\"2.0\",      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\r\n        //         plugins:[''],       // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n        //     }).then((AMap)=>{\r\n        //         this.map = new AMap.Map(\"container\",{  //设置地图容器id\r\n        //             viewMode:\"3D\",    //是否为3D地图模式\r\n        //             // zoom: this.lonlatOptions.zoom,           //初始化地图级别\r\n        //             zoom: 15,           //初始化地图级别\r\n        //             // center: [this.lonlatOptions.lon, this.lonlatOptions.lat], //初始化地图中心点位置\r\n        //             center: [107.472859, 31.210750], //初始化地图中心点位置\r\n        //         });\r\n        //         console.log(this.map)\r\n        //     }).catch(e=>{\r\n        //         console.log(e);\r\n        //     })\r\n        // },\r\n        //设置底图 样式\r\n        setStyleLayer(val) {\r\n            const styleMap = `amap://styles/${val}`\r\n            this.map.setMapStyle(styleMap);\r\n        },\r\n        //实时获取经纬度和地图级别信息\r\n        getLngLatPosition() {\r\n            const that = this\r\n            if(that.map) {\r\n                that.map.on('mousemove', (e)=> {\r\n                    that.lonlatOptions.lon = e.lnglat.getLng()\r\n                    that.lonlatOptions.lat = e.lnglat.getLat()\r\n                })\r\n                that.map.on('zoomend', e=> {\r\n                    that.lonlatOptions.zoom = Math.round(that.map.getZoom())\r\n                })\r\n            }\r\n        },\r\n        //测试按钮\r\n        change() {\r\n            const that = this\r\n                that.map.plugin([\"AMap.MouseTool\"],function(){\r\n                var mousetool = new AMap.MouseTool(that.map);\r\n                // 使用鼠标工具，在地图上画标记点\r\n                    mousetool.marker();\r\n                });\r\n        },\r\n      \r\n        addWMSLayer() {\r\n            // 切片转经度\r\n            function tile2lon(x, z) {\r\n                return (x / Math.pow(2, z) * 360 - 180);\r\n            }\r\n\r\n            // 切片转纬度\r\n            function tile2lat(y, z) {\r\n                var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\r\n                return (180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\r\n            }\r\n            var resolutions = []\r\n            for (var i = 0; i < 19; i++) {\r\n                resolutions[i] = Math.pow(2, 18 - i);\r\n            }\r\n            function objToParams(obj){\r\n                return Object.keys(obj).map(function (key) {\r\n                    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(obj[key]));\r\n                }).join('&');\r\n            }\r\n            var tileLayer = new AMap.TileLayer({\r\n                tileSize: 256,\r\n                tileUrl: function (x, y, z) {\r\n                    let xmin = tile2lon(x, z);\r\n                    let xmax = tile2lon(x + 1, z);\r\n                    let ymin = tile2lat(y + 1, z);\r\n                    let ymax = tile2lat(y, z);\r\n\r\n                    // 转换对应坐标\r\n                    let t1 = gcoord.transform([xmin, ymin], gcoord.GCJ02, gcoord.EPSG3857);\r\n                    let t2 = gcoord.transform([xmax, ymax], gcoord.GCJ02, gcoord.EPSG3857);\r\n\r\n                    // 查询对象\r\n                    let url = 'http://localhost:8085/geoserver/wms?';\r\n                    let params = {\r\n                        service: \"WMS\",\r\n                        version: \"1.1.0\",\r\n                        transparent: true,\r\n                        request: \"GetMap\",\r\n                        layers: \"cite:DZ_ssqy\",\r\n                        width: 256,\r\n                        height: 256,\r\n                        srs: \"EPSG:3857\",\r\n                        format: \"image/png\",\r\n                        bbox: [t1[0], t1[1], t2[0], t2[1]].join(',')\r\n                    };\r\n\r\n                    // 构建查询字符串\r\n                    let str = objToParams(params);\r\n\r\n                    return url + str\r\n                    // return url \r\n                },\r\n                zIndex: 10\r\n            })\r\n\r\n           \r\n            this.map.add(tileLayer);\r\n            tileLayer.on('click',function(e) {\r\n                console.log(e,'e');\r\n            })\r\n        },\r\n        //添加图标点\r\n        addPoint() {\r\n            const circles = []\r\n            this.arrData.forEach(element=>{\r\n                const jd = element.经度\r\n                const wd = element.纬度\r\n                const lnglat = gcoord.transform([jd, wd], gcoord.EPSG4326,gcoord.GCJ02);\r\n                const point = {\r\n                    lnglat:lnglat,\r\n                    // style: 2\r\n                    number: element.窨井盖编号\r\n                }\r\n                circles.push(point)\r\n            })\r\n            // console.log(circles,'circles');\r\n\r\n            var style = [{\r\n                    url: 'https://webapi.amap.com/images/mass/mass0.png',\r\n                    anchor: new AMap.Pixel(6, 6),\r\n                    size: new AMap.Size(11, 11),\r\n                    zIndex: 3,\r\n                }, {\r\n                    url: 'https://webapi.amap.com/images/mass/mass1.png',\r\n                    anchor: new AMap.Pixel(4, 4),\r\n                    size: new AMap.Size(7, 7),\r\n                    zIndex: 2,\r\n                }, {\r\n                    url: 'https://webapi.amap.com/images/mass/mass2.png',\r\n                    anchor: new AMap.Pixel(3, 3),\r\n                    size: new AMap.Size(5, 5),\r\n                    zIndex: 1,\r\n                }\r\n            ];\r\n            const marker = new AMap.Marker({content: ' ', map: this.map});\r\n\r\n            \r\n            const mass = new AMap.MassMarks(circles, {\r\n                opacity: 0.8,\r\n                zIndex: 111,\r\n                cursor: 'pointer',\r\n                style: style[1]\r\n            });\r\n           \r\n            mass.on('mouseover', function (e) {\r\n            // console.log(e.data,'e.data');\r\n            marker.setPosition(e.data.lnglat);\r\n            marker.setLabel({content: e.data.number})\r\n            });\r\n\r\n            mass.setMap(this.map)\r\n            // console.log(mass.getData());\r\n            \r\n        },\r\n        //添加圆形矢量对象\r\n        addCircleFeature(center) {\r\n            var circle = new AMap.Circle({\r\n                    center: center, //圆心\r\n                    radius: 10, //半径\r\n                    borderWeight: 3,\r\n                    strokeColor: \"#FF33FF\", \r\n                    // strokeOpacity: 1,\r\n                    strokeWeight: 6,\r\n                    strokeOpacity: 0.2,\r\n                    fillOpacity: 0.4,\r\n                    strokeStyle: 'dashed',\r\n                    strokeDasharray: [10, 10], \r\n                    // 线样式还支持 'dashed'\r\n                    fillColor: '#1791fc',\r\n                    zIndex: 50,\r\n            })\r\n          \r\n            return circle\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#AMap {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.toolBar {\r\n    display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  height: 50px;\r\n  width: 100px;\r\n  color: #e9e9e9;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  text-align: center;\r\n  z-index: 999;\r\n  left: 0rem;\r\n  top: 4rem;\r\n}\r\n</style>","<template>\r\n  <div class=\"layersMap\">\r\n    <h4>官方默认地图底图样式</h4>\r\n    <div id=\"map-styles\">\r\n        <div class=\"style-item\" v-for=\"(item) in styleList\" :key=\"item\">\r\n            <el-radio-group v-model=\"styleName\" @change=\"changeMapStyle\">\r\n                <el-radio v-model=\"styleName\" :label= item.name></el-radio>\r\n            </el-radio-group>\r\n            <span class=\"style-text\">{{ item.value }}</span>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'AmapLayers',\r\n    data() {\r\n        return {\r\n            styleList: [\r\n                {\r\n                    name: '标准',\r\n                    value: 'normal'\r\n                },\r\n                {\r\n                    name: '幻影黑',\r\n                    value: 'dark'\r\n                },\r\n                {\r\n                    name: '月光银',\r\n                    value: 'light'\r\n                },\r\n                {\r\n                    name: '远山黛',\r\n                    value: 'whitesmoke'\r\n                },\r\n                {\r\n                    name: '草色青',\r\n                    value: 'fresh'\r\n                },\r\n                {\r\n                    name: '雅士灰',\r\n                    value: 'grey'\r\n                },\r\n                {\r\n                    name: '涂鸦',\r\n                    value: 'graffiti'\r\n                },\r\n                {\r\n                    name: '马卡龙',\r\n                    value: 'macaron'\r\n                },\r\n                {\r\n                    name: '靛青蓝',\r\n                    value: 'blue'\r\n                },\r\n                {\r\n                    name: '极夜蓝',\r\n                    value: 'darkblue'\r\n                },\r\n                {\r\n                    name: '酱籽',\r\n                    value: 'wine'\r\n                },\r\n                \r\n            ],\r\n            styleName: '标准' // 初始默认值\r\n        }\r\n    },\r\n    methods: {\r\n        //根据选择的值 传 类型参数 给 地图组件改变底图样式\r\n        changeMapStyle(val) {\r\n            this.styleList.forEach(element=>{\r\n                if (element.name === val) {\r\n                    this.$emit(\"sendStyleLayer\",element.value); \r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layersMap {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 0;\r\n  word-wrap: break-word;\r\n  background-color: #fff;\r\n  background-clip: border-box;\r\n  border-radius: .25rem;\r\n  width: 12rem;\r\n  border-width: 0;\r\n  border-radius: 0.4rem;\r\n  box-shadow: 0 2px 6px 0 rgba(114, 124, 245, .5);\r\n  position: absolute;\r\n  top : 1rem;\r\n  right: 1rem;\r\n  -ms-flex: 1 1 auto;\r\n  flex: 1 1 auto;\r\n  padding: 0.75rem 1.25rem;\r\n  z-index: 999;\r\n}\r\nh4 {\r\n  font-family: inherit;\r\n  line-height: 1.8;\r\n  font-weight: 300;\r\n  color: inherit;\r\n  font-size: 0.9rem;\r\n  margin-top: 0;\r\n  margin-bottom: .5rem\r\n}\r\n.style-item {\r\n  position: relative;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 2rem;\r\n  align-content: space-between;\r\n\r\n}\r\n.style-text {\r\n  width: 5rem;\r\n  text-align: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 100;\r\n  line-height: 2rem;\r\n  color: #25A5F7;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n}\r\n</style>","import { render } from \"./LayerMapTree.vue?vue&type=template&id=1fef3e4a&scoped=true\"\nimport script from \"./LayerMapTree.vue?vue&type=script&lang=js\"\nexport * from \"./LayerMapTree.vue?vue&type=script&lang=js\"\n\nimport \"./LayerMapTree.vue?vue&type=style&index=0&id=1fef3e4a&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fef3e4a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"locationBar\">\r\n    <span class=\"text\">{{ `经度：${lonlatObject.lon}   纬度：${lonlatObject.lat}   级别：${lonlatObject.zoom}` }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'locationBar',\r\n  props: {\r\n    lonlatObject: {\r\n      type: Object,\r\n      default() {\r\n        return { }\r\n      }\r\n    }\r\n  },\r\n \r\n  data() {\r\n    return {\r\n      \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.locationBar {\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  height: 50px;\r\n  width: 100%;\r\n  color: #e9e9e9;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  text-align: center;\r\n  z-index: 999;\r\n  right: 0rem;\r\n  bottom: 4rem;\r\n}\r\n.text {\r\n  padding: 5px;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  text-shadow: -1px 0px 1px red, 1px 0px 1px red, 0px -1px 1px red, 0px 1px 1px red;\r\n}\r\n</style>","import { render } from \"./LocationBar.vue?vue&type=template&id=0deb2fa0&scoped=true\"\nimport script from \"./LocationBar.vue?vue&type=script&lang=js\"\nexport * from \"./LocationBar.vue?vue&type=script&lang=js\"\n\nimport \"./LocationBar.vue?vue&type=style&index=0&id=0deb2fa0&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0deb2fa0\"]])\n\nexport default __exports__","import { render } from \"./GaoDeMap.vue?vue&type=template&id=298879ae&scoped=true\"\nimport script from \"./GaoDeMap.vue?vue&type=script&lang=js\"\nexport * from \"./GaoDeMap.vue?vue&type=script&lang=js\"\n\nimport \"./GaoDeMap.vue?vue&type=style&index=0&id=298879ae&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-298879ae\"]])\n\nexport default __exports__","<template>\r\n    <div id=\"BaiDuMap\">\r\n        <locationbar :lonlatObject=\"lonlatOptions\" />\r\n        <el-button class=\"toolBar\">sssssss</el-button>\r\n    </div>\r\n</template>\r\n\r\n<script> \r\nimport locationbar from \"./LocationBar.vue\"\r\nexport default {\r\n    name: 'BMapView',\r\n    components: {\r\n        locationbar\r\n    },\r\n    data() {\r\n        return {\r\n            map: null,\r\n            lonlatOptions: {  //初始化默认参数\r\n                lon: 104.070929,\r\n                lat: 30.666901,\r\n                zoom: 15\r\n            }, // 实时经纬度和级别参数对象\r\n        }\r\n    },\r\n    mounted () {\r\n        this.initMap()\r\n        this.getLngLatPosition()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n            // return new Promise((resolve) => {\r\n                this.map = new BMapGL.Map(\"BaiDuMap\");\r\n                // 创建地图实例  \r\n                // 创建点坐标  \r\n                this.map.centerAndZoom(new BMapGL.Point(104.070929, 30.666901), 15);\r\n                this.map.enableScrollWheelZoom(true);\r\n\r\n            //     resolve(this.map);\r\n            // });\r\n        },\r\n        //实时获取经纬度位置与地图缩放级别信息\r\n        getLngLatPosition() {\r\n            const that = this\r\n            that.map.addEventListener('mousemove', function (e) {\r\n                // console.log(e.latlng.lng, e.latlng.lat);\r\n                that.lonlatOptions.lon = e.latlng.lng\r\n                that.lonlatOptions.lat = e.latlng.lat\r\n            })\r\n            that.map.addEventListener('zoomend', function(e) {\r\n                that.lonlatOptions.zoom = Math.round(that.map.getZoom())\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#BaiDuMap {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.toolBar {\r\n    display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  height: 50px;\r\n  width: 100px;\r\n  color: #e9e9e9;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  text-align: center;\r\n  z-index: 999;\r\n  left: 0rem;\r\n  top: 4rem;\r\n}\r\n</style>","<template>\r\n    <div class=\"locationBar\">\r\n      <span class=\"text\">{{ `经度：${lonlatObject.lon}   纬度：${lonlatObject.lat}   级别：${lonlatObject.zoom}` }}</span>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'locationBar',\r\n    props: {\r\n      lonlatObject: {\r\n        type: Object,\r\n        default() {\r\n          return { }\r\n        }\r\n      }\r\n    },\r\n   \r\n    data() {\r\n      return {\r\n        \r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .locationBar {\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 100%;\r\n    color: #e9e9e9;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    text-align: center;\r\n    z-index: 999;\r\n    right: 0rem;\r\n    top: 4rem;\r\n  }\r\n  .text {\r\n    padding: 5px;\r\n    font-family: Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    text-shadow: -1px 0px 1px red, 1px 0px 1px red, 0px -1px 1px red, 0px 1px 1px red;\r\n  }\r\n  </style>","import { render } from \"./LocationBar.vue?vue&type=template&id=bea1563a&scoped=true\"\nimport script from \"./LocationBar.vue?vue&type=script&lang=js\"\nexport * from \"./LocationBar.vue?vue&type=script&lang=js\"\n\nimport \"./LocationBar.vue?vue&type=style&index=0&id=bea1563a&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bea1563a\"]])\n\nexport default __exports__","import { render } from \"./BaiDuMap.vue?vue&type=template&id=54f22fae&scoped=true\"\nimport script from \"./BaiDuMap.vue?vue&type=script&lang=js\"\nexport * from \"./BaiDuMap.vue?vue&type=script&lang=js\"\n\nimport \"./BaiDuMap.vue?vue&type=style&index=0&id=54f22fae&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\数据\\\\自测Demo\\\\OpenLayers\\\\openlayers_vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-54f22fae\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport OpenlayersView from \"../views/openlayers2D/OpenlayersView.vue\";\nimport MapBoxView from \"../views/MapBox/MapBoxView.vue\";\nimport AMapView from \"../views/AMap/GaoDeMap.vue\";\nimport BMapView from \"../views/BMap/BaiDuMap.vue\";\n\nconst routes = [{\n        path: \"/\",\n        name: \"OpenlayersView\",\n        component: OpenlayersView,\n    },\n    {\n        path: \"/cesium\",\n        name: \"CesiumView\",\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: function() {\n            return import ( /* webpackChunkName: \"about\" */ \"../views/cesium3D/CesiumView.vue\");\n        },\n    }, {\n        path: \"/mapbox\",\n        name: \"mapbox\",\n        component: MapBoxView\n    }, {\n        path: \"/GaoDeMap\",\n        name: \"AMap\",\n        component: AMapView\n    }, {\n        path: \"/BaiDuMap\",\n        name: \"BMap\",\n        component: BMapView\n    }\n];\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes,\n});\n\nexport default router;","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\n\ncreateApp(App).use(store).use(router).use(ElementPlus).mount(\"#app\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"3423d53f\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + \"about\" + \".\" + \"d242e54a\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"openlayers_vue3:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"443\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkopenlayers_vue3\"] = self[\"webpackChunkopenlayers_vue3\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(926); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","pageList","item","toIndexPage","nameId","key","name","data","path","fullscreen","date","mounted","methods","openScreen","ele","document","documentElement","this","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","val","$router","push","__exports__","components","HeadeTitle","MapTotal","render","id","mode","ellipsis","handleSelect","index","text","title","setLayerVisble","seletDraw","drawCircle","initMeasure","Math","ceil","random","ol","layer","Vector","source","wmsURL","Tile","extent","TileWMS","url","params","FORMAT","VERSION","tiled","STYLES","LAYERS","crossOrigin","serverType","projection","visible","zIndex","iconMap","pointermoveClick","trackPlayBack","map","options","_coordinates","coordinates","lastTime","route","geoMarker","position","startIcon","startUrl","endIcon","endtUrl","endUrl","midIcon","midUrl","distance","speed","styles","style","Style","stroke","Stroke","width","color","image","Icon","anchor","src","scale","vectorLayer","feature","get","addLayer","Object","defineProperties","prototype","set","value","length","geom","LineString","routeFeature","Feature","geometry","type","startMarker","Point","getFirstCoordinate","endMarker","getLastCoordinate","getGeometry","clone","getSource","addFeature","alert","moveFeature","event","time","frameState","elapsedTime","setGeometry","currentCoordinate","getCoordinateAt","setCoordinates","vectorContext","getVectorContext","setStyle","drawGeometry","startAnimation","Date","now","on","endAnimation","un","draw","measure","movefeature","animation","undefined","initMap","initMeasureHandle","initMove","keyPath","stop","tdtMap","XYZ","tdtMap2","Promise","Map","layers","target","view","View","center","zoom","changeMap","addIcon","iconStyle","pos","soure","addIcons","forEach","element","bool","features","getFeatures","setVisible","darwPoint","removeInteraction","interaction","Draw","addInteraction","setActive","darwLine","darwPolygon","drawBox","geometryFunction","createBox","dblClick","getInteractions","getArray","find","DoubleClickZoom","clearAll","clear","wrapX","styleFunction","fill","Fill","lineDash","Circle","radius","thatMap","thatlistener","sketch","measureTooltipElement","measureTooltip","createMeasureTooltip","evt","tooltipCoord","coordinate","output","Polygon","p","circleIn4326","transform","getView","getProjection","formatArea","getInteriorPoint","getCoordinates","formatLength","innerHTML","setPosition","Observable","unByKey","line","sphere","getLength","round","polygon","area","getArea","parentNode","removeChild","createElement","className","Overlay","offset","positioning","stopEvent","insertFirst","addOverlay","handlerDis","handlerArea","that","closeDoubleClickZoom","handleMeasureDis","zoomRec","console","log","getResolutionForExtent","throttle","func","delay","timer","setTimeout","e","closeClick","initcloseMap","callbcack","getCenter","getRadius","getMetersPerUnit","initdraw","newstyle","freehand","drawLayer","mapboxgl","accessToken","lat","lng","container","addControl","NavigationControl","FullscreenControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","setStyleLayer","lonlatObject","lonlatOptions","change","styleList","styleName","changeMapStyle","label","$emit","lon","props","default","AmapLayers","locationbar","styleLayer","arrData","getLngLatPosition","created","getData","AMap","viewMode","addPoint","properties","styleMap","setMapStyle","lnglat","getLng","getLat","getZoom","plugin","mousetool","MouseTool","marker","addWMSLayer","tile2lon","x","z","pow","tile2lat","y","n","PI","atan","exp","resolutions","i","objToParams","obj","keys","concat","encodeURIComponent","join","tileLayer","TileLayer","tileSize","tileUrl","xmin","xmax","ymin","ymax","t1","gcoord","GCJ02","EPSG3857","t2","service","version","transparent","request","height","srs","format","bbox","str","add","circles","jd","wd","EPSG4326","point","number","Pixel","size","Size","Marker","content","mass","MassMarks","opacity","cursor","setLabel","setMap","addCircleFeature","circle","borderWeight","strokeColor","strokeWeight","strokeOpacity","fillOpacity","strokeStyle","strokeDasharray","fillColor","BMapGL","centerAndZoom","enableScrollWheelZoom","addEventListener","latlng","routes","component","OpenlayersView","MapBoxView","router","history","state","getters","mutations","actions","modules","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","prop","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","bind","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","resolve","reject","linkTag","rel","onLinkComplete","errorType","realHref","href","err","Error","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","then","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","message","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}